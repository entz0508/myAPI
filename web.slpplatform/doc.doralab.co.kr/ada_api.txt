
## __ADA API__

*DOC LIST*
* [SLP Platform API](/slp_platform_api?pass=ehfkfpqakstp!1)
* [DORA API](/dora_api?pass=ehfkfpqakstp!1)
* [SLP EN API](/slp_en_api?pass=ehfkfpqakstp!1)
* [SLP NDE API](/slp_nde_api?pass=ehfkfpqakstp!1)
* [ADB API](/api_ADB?pass=dpdlelql!)
* [JSU API](/slp_jsu_api?pass=ehfkfpqakstp!1)
* [ADA API](/fit_ada?pass=fitadavmfhwprxm!1)

*<strong>서버 to 클라이어트 결과</strong>*

	1. 응답 결과는 JSON 으로 전송한다
	2. 성공 실패는 res 값으로 구분한다.
       정상 : res == 0
       그외 : res != 0
	   예)  { "res":0 , ..... }
	3. 회원의 인증
		유져는 토큰을 디바이스에 저장해서 인증에 이용한다.
		일정기간내에 저장된 토큰을 보내면 그대로 인증된다.(account는 device당 1개의 토큰을 갖는다.)
		일정기간이 경과한 토큰에 대해서는 인정하지 않는다. 다시 로그인
		매처리시 토큰을 같이 보내고. 이를 유져의 키값으로 인증한다.
		다른 디바이스를 이용해서 로그인시 토큰을 신규 생성한다.
	4. 회원가입시 공통 체크
		clientUID                   length:0~64, 기기고유코드
		os                            enum('android','ios','web')
		accessToken              not null, length:40
	5. 로그인인증시 공통 체크
		clientUID                   length:0~64, 기기고유코드
		os                            enum('android','ios','web')
		accessToken              not null, length:40


*<strong>개발 서버 주소</strong>*

                DEV Server IP : https://apidev.doralab.co.kr (MySQL)
                ADB DEV Server IP : 35.194.222.5 (Node API)

*<strong>API 목록</strong>*

[Account](#Account)
    1. 회원가입 - [/ada/account/join](#/ada/account/join) - POST, 작업 중
    2. 로그인 - [/ada/account/login](#/ada/account/login) - POST, 작업 중
    3. 계정정보 가져오기 - [/ada/account/getInfo](#/ada/account/getInfo) - POST, 작업 예정 - 4
   
[Boutique](#Boutique)
    1. 카테고리 리스트(브랜드 카테고리 리스트) - [/ada/boutique/categoryList](#/ada/boutique/categoryList) - POST , 작업 완료
    2. 브랜드 리스트 - [/ada/boutique/brandList](#/ada/boutique/brandList) - POST , 작업 완료
    3. 브랜드 디테일 - [/ada/boutique/brandDetail](#/ada/boutique/brandDetail) - POST , 작업 완료
    4. 배너 리스트 - [/ada/boutique/bannerList](#/ada/boutique/bannerList) - POST, 작업 완료
    5. 상품 리스트 - [/ada/boutique/productList](#/ada/boutique/productList) - POST, 작업 완료
    6. 상품 상세보기 - [/ada/boutique/productDetail](/ada/boutique/productDetail) - POST, 작업 완료
    7. 피쳐드 리스트 - [/ada/boutique/featuredList](#/ada/boutique/featuredList) - POST, 작업 완료
    8. 피쳐드 디테일 - [/ada/boutique/featuredDetail](#/ada/boutique/featuredDetail) - POST, 작업 완료
    9. 컨텐츠 뷰어 - [/ada/boutique/contentsView](#/ada/boutique/contentsView) - POST , 작업 완료
    10. 태그 리스트 - [/ada/boutique/tagList](#/ada/boutique/tagList)  - POST, 작업 완료

[Wish](#Wish)
    1. wish 등록/삭제 - [/ada/wish/edit](#/ada/wish/edit) - POST, 작업 완료.
    2. wish 리스트 - [/ada/wish/list](#/ada/wish/list) - POST, 작업 예정 - 2
	3. like 등록/삭제 - [/ada/like/edit](#/ada/like/edit) - POST, 작업 예정 - 1.

[Cart](#Cart)
	1. 장바구니 등록/삭제/구매처리 - [/ada/cart/edit](#/ada/cart/edit) - POST, 작업 완료
	2. 장바구니/구매 리스트 - [/ada/cart/list](#/ada/cart/list) - POST, 작업 예정 - 3

[Wardrobe](#Wardrobe)
    1. 옷장 리스트 - [/ada/wardrobe/list](#/ada/wardrobe/list) - ??
    2. 아이템 착용 / 해제 - [/ada/wardrobe/wear](#/ada/wardrobe/wear) - ??

[ETC](#Etc)
    1. api서버 통신테스트 - [/ada/etc/test](#/ada/etc/test) - POST,완료
    
[ERROR CODE](#errorCode)
* * * * *


##Account <a id="Account" href="#Account">¶</a>

###1. 회원가입 [/ada/account/join] / POST <a id="/ada/account/join" href="#/ada/account/join">¶</a>

*info*

    기능 : ADA 회원가입
    수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. 


*parameter*

        client_uid : string             // 가입 경로의 유저 키값
        country : string                // 국가
        signup_path : string          // 가입 경로
        signup_id : string             // 가입 경로 ID ('guest');
        nick_name : string           // 유저 닉네임
        age : int                         // 나이
        gender : int                    // 성별
        head : int                      // 머리 사이즈
        arm_l : int                     // 팔 사이즈
        arm_b : int                    // 팔 사이즈 
        leg_l : int                      // 다리 사이즈
        leg_b : int                     // 다리 사이즈
        skin : int                       // 피부
        top : int                        // 상체
        hair : int                       // 헤어 타입
        bottom : int                  //  하체
        shoes : int                    // 신발 타입

*return value*

    // 성공
    {
    "res": 0,
    "data": {
        "userInfo": {
            "accountID": 100000008,                                                // 계정ID
            "accessToken": "8ce64bff119be83f25bd84954d64f0889a447a41"   // accessToken
        }
    }
}

    //실패
    {
        "res": int,                                                                 // 0 이 아닌 값,
        "msg": string.					// 오류 메세지
        "data": null
    }

*res*

    0 : 성공　
    ? : 정리중


###2. 로그인 [/ada/account/login] / POST <a id="/ada/account/login" href="#/ada/account/login">¶</a>

*info*

    기능 : ADA 회원 로그인 이후 유저 계정 정보를 리턴 값으로 노출
    수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. 


*parameter*

        signup_path : string          // 가입 경로
        signup_id : string             // 가입 경로 ID ('guest');
    
*return value*

    // 성공
    {
    "res": 0,
    "data": {
        "userInfo": {
            "accessToken": "454ab6a16cafb992fed6f50dd7fb4a7a5c907835",
            "nickName": "adatester",
            "birthDay": "2018-08-16 00:00:00",
            "gender": 2,
            "country": "KO",
            "profileImage": null,
            "age": 0,
            "head": 1,
            "armL": 0,
            "armB": 0,
            "legL": 1,
            "legB": 1,
            "skin": 1,
            "hair": 2,
            "top": 1,
            "bottom": 1,
            "shoes": 0
        }
    }
}

    //실패
    {
        "res": int,                                                                 // 0 이 아닌 값,
        "msg": string.					// 오류 메세지
        "data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###3. 계정정보 가져오기 [/ada/account/getInfo] / POST <a id="/ada/account/getInfo" href="#/ada/account/getInfo">¶</a>

*info*

    기능 : 유저 계정 정보 가져오기
    수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. 


*parameter*

    signup_path : string          // 가입 경로
    signup_id : string             // 가입 경로 ID ('guest');
    
*return value*

    // 성공
    ... 작성중

    //실패
    {
        "res": int,                                                                 // 0 이 아닌 값,
        "msg": string.					// 오류 메세지
        "data": null
    }

*res*

    0 : 성공　
    ? : 정리중


##Boutique <a id="Boutique" href="#Boutique">¶</a>

###1. 카테고리 리스트(브랜드 카테고리 리스트) [/ada/boutique/categoryList] / POST <a id="/ada/boutique/categoryList" href="#/ada/boutique/categoryList">¶</a>

*info*

    기능 : 부티끄 진입 전 카테고리 리스트 를 출력
    수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. / account 작업이 완료 된 후 return 형식이 변경 될 수 있음.


*parameter*

    brand_id : int                  // brand ID

                - 숫자 0 입력 시 아이템 전체의 카테고리 리스트 출력,
                - brand ID 입력 시 (ex. 100004) 해당 브랜드의 카테고리 리스트 출력.

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                "gender": 2,
                "gold": 20000,
                "dia": 1000
            },
            "categoryList": [
                {
                    "categoryID": 1,
                    "categoryName": "Tops",
                    "gender": 0
                },
                {
                    "categoryID": 2,
                    "categoryName": "Pants",
                    "gender": 0
                },
                {
                    "categoryID": 3,
                    "categoryName": "Skirt",
                    "gender": 2
                },
                {
                    "categoryID": 4,
                    "categoryName": "Dress",
                    "gender": 2
                },
                ... 카테고리 반복
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###2. 브랜드 리스트 [/ada/boutique/brandList] / POST <a id="/ada/boutique/brandList" href="#/ada/boutique/brandList">¶</a>

*info*

    기능 : 부티끄 진입 전 브랜드 리스트 를 출력
    수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. / account 작업이 완료 된 후 return 형식이 변경 될 수 있음.


*parameter*

    gender_id : int                // 성별 ID , 1 : 남성 / 2 : 여성 그 외에 0 : 전체


*return value*

    // 성공
    {
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                            "gender": 2,
                            "gold": 20000,
                            "dia": 1000
            },
            "brandList": [
                {
                    "brandID": 100004,
                    "brandName": "Balenciaga",
                    "brandImage": "bl_blc_70004_1.png",
                    "brandThumImage": "be_blc_70004_1.png"
                },
                {
                    "brandID": 100009,
                    "brandName": "Calvin Klein",
                    "brandImage": "bl_ck_70009_1.png",
                    "brandThumImage": "be_ck_70009_1.png"
                },
                {
                    "brandID": 100002,
                    "brandName": "Chanel",
                    "brandImage": "bl_cnl_70002_1.png",
                    "brandThumImage": "be_cnl_70002_1.png"
                },
                {
                    "brandID": 100005,
                    "brandName": "Chloe",
                    "brandImage": "bl_cle_70005_1.png",
                    "brandThumImage": "be_cle_70005_1.png"
                },
                ... 브랜드 리스트 반복
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
        "msg": string.					// 오류 메세지
        "data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###3. 브랜드 디테일 [/ada/boutique/brandDetail] / POST <a id="/ada/boutique/brandDetail" href="#/ada/boutique/brandDetail">¶</a>

*info*

    기능 : 부티끄 진입 전 카테고리 리스트 를 출력
    수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. /  account 작업이 완료 된 후 return 형식이 변경 될 수 있음.


*parameter*

    brand_id                        // 브랜드 ID

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                            "gender": 2,
                            "gold": 20000,
                            "dia": 1000
            },
            "brandName": "Balenciaga",
            "description": "Balenciaga is a luxury fashion house founded in Spain by Cristóbal Balenciaga, a Spanish designer born in the Basque Country, Spain. He had a reputation as a couturier of uncompromising standards and was referred to as \"the master of us all\" by Christian Dior. His bubble skirts and odd, feminine, yet ultra-modern shapes were trademarks of the house.</n>The House of Balenciaga is now owned by the French multinational company Kering.",
            "brandURL": "www.balenciaga.com",
            "brandImage": "bl_blc_70004_1.png",
            "brandThumImage": "be_blc_70004_1.png",
            "likeCount": 140,
            "categoryList": [
                {
                    "categoryID": 1,
                    "categoryName": "Tops",
                    "gender": 0
                },
                {
                    "categoryID": 2,
                    "categoryName": "Pants",
                    "gender": 0
                },
                {
                    "categoryID": 3,
                    "categoryName": "Skirt",
                    "gender": 2
                },
                ... 카테고리 리스트 반복
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중


###4. 배너 리스트 [/ada/boutique/bannerList] / POST <a id="/ada/boutique/bannerList" href="#/ada/boutique/bannerList">¶</a>

*info*

       기능 : 브랜드 선택 후 브랜드의 상세 페이지 노출
       수정예정 : 입력 파라미터가 추가 될 수 있음. 출력 결과 값의 개인정보 노출 부분이 변경 될 수 있음. / account 작업이 완료 된 후 return 형식이 변경 될 수 있음.


*parameter*

        place_id : int          // 배너 위치 ID
        brand_id : int          // 브랜드별 구분이 필요한 경우 브랜드 ID, 그 외에는 0(전체)
        gender_id : int         // 성별 정보가 존재 할 경우 , 1 : 남성 / 2 : 여성 그 외에 0 : 전체
        age : int               // 나이 정보가 존재 할 경우 , 그 외에는 0 : 전체


*return value*

       // 성공
        {
            "res": 0,
            "msg": "search success",
            "data": {
                "accountInfo": {
                                "gender": 2,
                                "gold": 20000,
                                "dia": 1000
                },
                "bannerList": [
                    {
                        "title": "베너제목",
                        "imageURL": "http://35.194.222.5/fit/3_2_banner_sample.png",
                        "contents_id": 1,
                        "linkURL": ""
                    },
                    {
                        "title": "베너제목3",
                        "imageURL": "http://35.194.222.5/fit/a4db65b05f41815608282dfd58b3dcf5.jpg",
                        "contents_id": 3,
                        "linkURL": ""
                    },
                    {
                        "title": "베너제목2",
                        "imageURL": "http://35.194.222.5/fit/3_2_banner_sample.png",
                        "contents_id": 5,
                        "linkURL": "https://sports.news.naver.com/kbaseball/news/read.nhn?oid=477&aid=0000127100"
                    },
                    {
                        "title": "베너제목4",
                        "imageURL": "http://35.194.222.5/fit/518526_2_800x.jpg",
                        "contents_id": 4,
                        "linkURL": ""
                    }
                ]
            }
        }

       //실패
       {
           "res": int,						// 0 이 아닌 값,
           "msg": string.					// 오류 메세지
           "data": null
       }

*res*

       0 : 성공　
       ? : 정리중


###5. 상품 리스트 [/ada/boutique/productList] / POST <a id="/ada/boutique/productList" href="#/ada/boutique/productList">¶</a>

*info*

    기능 : 부티크 내 상품 리스트를 출력
		   로그인된 경우 토큰값을 전달하면, wish 선택여부, 장바구니 등록여부, 구매여부를 확인할수 있다.
		   
    수정 : account 적용완료(2018.08.17)

    기획서 : ada_gdd_m1_부띠끄 진입 경로와 부띠끄 메뉴 2.1.1 / 2.1.2
	search_type :
		0 : all(전체)
		1: sale(할인) - 할인률(sales_tb.DIS_RATIO)이 등록된 상품만 출력
		2: new(신상) - 발매일(sales_tb.RELEASE_DATE,관리자 수동 변경가능)기준 10일 이내 제품만 출력(등록되지 않은 날은 pass하고 날짜카운트)
		3: category - 카테고리별 출력, 카테고리 리스트의 카테고리 ID(cate_val)를 별도로 전달
		4: brand - 브랜드별 출력
		5: featured - 피쳐드에 등록된 상품리스트(각 상품은 한개이상의 피쳐드에 중복 등록가능)


*parameter*

		client_uid : string				// 필수, 디바이스 UID
		os : string						// 필수, OS : enum(ios/android/web)
		access_token : string			// 선택 - 토큰이 없을경우 null, access token
		- 이하 contents var -
        search_type : int               // all 0, sale 1, new 2, category 3, brand 4, featured 5
        cate_val : int                  // tagType 1, category ID
        subcate_val : int               // tagType 2, sub category ID
        collection_val : int            // tagType 3, collection ID
        brand_val : int                 // tagType 4, brand ID
        style_val : int                 // tagType 5, style ID
        color_val : int                 // tagType 6, color ID
		featured_val : int              // tagType 7, featured ID
        sort_type : int                 // 정렬타입 - 신상품순 0, 낮은가격순 1, 높은가격순 2, 인기순 3 (인기순은 추후 적용)
        append_val : int				// 리스트 호출시 출력 개수
		gender : int					// 조회할 성별(0 전체, 1 남성, 2 여성)
		page_val : int                  // API 최초 호출 시 0 으로 입력 되어야 함. 이 후 1씩 증가

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "productCount": 293,				// 상품개수
            "accountInfo": {					// 유져정보
                "gender": 1,					// 성별 남자 1, 여자 2, 성별 없음 0
                "gold": 20000,					// 골드
                "dia": 1000						// 다이아
            },
            "itemList": [
                {
                    "productID": 757,									// 상품 ID
                    "productName": "Item Name 757",						// 상품명
                    "productImage": "http://35.194.222.5/fit/파일명",	// 상품이미지
					"productImageWidth": 600,							// 이미지 width
					"productImageHeight": 800,							// 이미지 height
                    "payMethod": 1,										// 판매재화 타입 : 골드 1, 다이아 2
                    "brandID": 100004,									// 브랜드 ID
                    "brandName": "Balenciaga",							// 브랜드명
                    "price": 130,										// 판매가격
					"saleType":0,				// 세일여부 : 세일 1, 일반 0
					"likeIt": 1,				// 좋아요 여부 : 체크 1, 미체크 0 - 현재 랜덤으로 출력중.
					"wished": 0,				// wish 선택여부 : 1 선택, 0 미선택
					"cartType": 0				// 장바구니 상태 : 1 장바구니 포함상품, 2 구매완료 상품, 0 장바구니 및 구매 이력없음
                },
                {
                    "productID": 768,
                    "productName": "Item Name 768",
                    "productImage": "http://35.194.222.5/fit/파일명",
					"productImageWidth": 600,
					"productImageHeight": 800,
                    "payMethod": 1,
                    "brandID": 100007,
                    "brandName": "Loewe",
                    "price": 160,
					"saleType":0,
					"likeIt": 0
                },
                {
                    "productID": 772,
                    "productName": "Item Name 772",
                    "productImage": "http://35.194.222.5/fit/파일명",
					"productImageWidth": 600,
					"productImageHeight": 800,
                    "payMethod": 1,
                    "brandID": 100006,
                    "brandName": "Miu Miu",
                    "price": 1000,
					"likeIt": 0
                },
                .. 상품 리스트 반복
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###6. 상품 상세 보기 [/ada/boutique/productDetail] / POST <a id="/ada/boutique/productDetail" href="#/ada/boutique/productDetail">¶</a>

*info*

    기능 : 입력된 상품 ID 값의 상세 정보를 표기.
		   로그인된 경우 토큰값을 전달하면, wish 선택여부, 장바구니 등록여부, 구매여부를 확인할수 있다.
		   
    수정 : account 적용완료(2018.08.17)

*parameter*

	client_uid : string				// 필수, 디바이스 UID
	os : string						// 필수, OS : enum(ios/android/web)
	access_token : string			// 선택 - 토큰이 없을경우 null, access token
	- 이하 contents var -
    sales_id : int					// 해당 상품의 ID
    

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                "gender": 2,
                "gold": 20000,
                "dia": 1000
            },
            "itemDetail": {
                "saleID": 112,									// 상품ID
                "pdtID": 497,									// 아이템ID
                "pdtName": "Item Name 497",						// 상품명
                "payMethod": 1,									// 판매타입
                "price": 210,									// 가격
                "expPoint": 3,									// 경험치
                "introduction": null,							// 상품설명
                "moreIntroduction": "MOREINFOMATION???",		// 상세설명
                "discountRatio": 0,								// 할인률(0보다 크면 할인상태)
                "buyLink": "http://www.naver.com",				// 상품 온라인 경로
                "brandID": 100002,								// 브랜드 아이디
                "brandName": "Chanel",							// 브랜드 명
                "likeCount": 25268,								// 상품 좋아요합계
				"wished": 0,					// wish 등록여부 : 1 등록, 0 미등록
				"cartType": 0					// 장바구니 상태 : 1 장바구니 등록, 2 구매완료, 0 장바구니 및 구매 이력없음
            },
            "pdtOption": [
                {
                    "subitemID": 6874,								// 상품옵션코드
                    "colorID": 1,									// 색생ID
                    "codeName": "Azure",							// 색상명
                    "codeValue": "#4872ba",							// RGB코드
                    "codeImage": "http://35.194.222.5/fit/wfe_col_21014_ylw_1.png",			// 샘플이미지 경로(준비안됨)
                    "attachList": [
                        {
							"attachType": 0,															// 색상 기본이미지 0, 그외 1
							"attachThum": "http://35.194.222.5/fit/thum/F_PRD_ONE_18PFGZ001_01.png",	// 썸네일 이미지
							"attachPath": "http://35.194.222.5/fit/F_PRD_ONE_18PFGZ001_01.png"			// 상세 이미지
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        }
                    ]
                },
                {
                    "subitemID": 6875,
                    "colorID": 6,
                    "codeName": "Gold",
                    "codeValue": "#988f60",
                    "codeImage": "wfe_col_21005_gld_1.png",
                    "attachList": [
                        {
                            "attachType": 0,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        }
                    ]
                },
                {
                    "subitemID": 6876,
                    "colorID": 8,
                    "codeName": "Grey",
                    "codeValue": "#8b949c",
                    "codeImage": "wfe_col_21007_gry_1.png",
                    "attachList": [
                        {
                            "attachType": 0,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        },
                        {
                            "attachType": 1,
                            "attachPath": "/item/attach/item.gif"
                        }
                    ]
                },
                ... 아이템 옵션 리스트 반복
            ],
            "tagList": [
                {
                    "tagType": 1,					// tag 타입
                    "tagValue": 8,					// tag 값
                    "tagName": "Inner wear"			// tag 이름
                },
                {
                    "tagType": 2,
                    "tagValue": 43,
                    "tagName": "Legging"
                },
                {
                    "tagType": 3,
                    "tagValue": 100002,
                    "tagName": "Chanel"
                },
                ... 태그 리스트 반복
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###7. 피쳐드 리스트 [/ada/boutique/featuredList] / POST <a id="/ada/boutique/featuredList" href="#/ada/boutique/featuredList">¶</a>

*info*

    기능 : 피쳐드 리스트를 출력.
    수정 예정 사항 : cover image value 값이 full path 로 변경 될 수 있음. / account 작업이 완료 된 후 return 형식이 변경 될 수 있음.

*parameter*

    gender_id : int             // gender ID
            - gender id 에 따라 featured list 가 변경 됨. (여자:2 / 남자:1)

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                            "gender": 2,
                            "gold": 20000,
                            "dia": 1000
            },
            "featuredList": [
                {
                    "featuredID": 3,
                    "title": "SUN! COLOUR! SHOP SUMMER3",
                    "message": "Bold prints and rich colour inform SS18 extravagance, as we head to the world's most iconic stretch of shoreline, Sydney's Bondi Beach, Here...",
                    "cover_image": "http://35.194.222.5/fit/1_1_featured_sample.png",
                    "tagCount": 0
                },
                {
                    "featuredID": 2,
                    "title": "SUN! COLOUR! SHOP SUMMER2",
                    "message": "Bold prints and rich colour inform SS18 extravagance, as we head to the world's most iconic stretch of shoreline, Sydney's Bondi Beach, Here...",
                    "cover_image": "http://35.194.222.5/fit/1_1_featured_sample.png",
                    "tagCount": 0
                },
                {
                    "featuredID": 1,
                    "title": "SUN! COLOUR! SHOP SUMMER1",
                    "message": "Bold prints and rich colour inform SS18 extravagance, as we head to the world's most iconic stretch of shoreline, Sydney's Bondi Beach, Here...",
                    "cover_image": "http://35.194.222.5/fit/1_1_featured_sample.png",
                    "tagCount": 0
                }
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###8. 피쳐드 디테일 [/ada/boutique/featuredDetail] / POST <a id="/ada/boutique/featuredDetail" href="#/ada/boutique/featuredDetail">¶</a>

*info*

    기능 : 피쳐드 리스트 API 에서의 결과 값 featured ID 를 파라미터로 사용하여 해당 피쳐드의 상세 내용을 노출
    수정 예정 사항 : account 작업이 완료 된 후 return 형식이 변경 될 수 있음.

*parameter*

    featured_id : int               // featured ID

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                            "gender": 2,
                            "gold": 20000,
                            "dia": 1000
            },
            "header": "Shop Summer1",
            "contents": "<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\n<div class=\"header_container-7\">\n<div class=\"header\">\n<img class=\"hidden-xl hidden-md visible-sm visible-xs\" src=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/00-xsm.jpg\" /></div></div>\n<div class=\"baseline col12 alpha omega\">\n<div class=\"article-content \">\n<div class=\"baseline col12 alpha omega\">\n<div class=\"container\">\n<div class=\"baseline col2 col-md-1 col-sm-1 col-xs-12\">&nbsp;</div>\n<div class=\"baseline col8 col-md-10 col-sm-10 col-xs-12 alpha omega\">\n<article> <div class=\"baseline col12 alpha omega\">\n<div class=\"article-container cards\">\n<link href=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/listing2.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/templates-2.1.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/dynamicProducts-3.0.1.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n<script src=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/dynamicProducts-3.0.1.min.js\"></script>\n<div id=\"item-template\"><article class=\"baseline col3 col-md-4 col-sm-4 col-xs-6 alpha omega listing-item mouse-over-element ab-available-sizes-product-card\"><div class=\"listing-item-image\"><a class=\"listing-item-link no-underline\" data-ffref=\"{{ffref}}\" href=\"%7b%7bProductUrl%7d%7d.html\" target=\"_self\"><img alt=\"{{Description2}}\" class=\"imageRollover lazy-img lazy-loaded js-rollover absolute crossfade\" src=\"http://:0/\" /><img alt=\"{{Description3}}\" class=\"absolute rolloverActive\" src=\"http://:1/\" /><noscript>&lt;img src=\"//:2\"&gt;</noscript></a></div><a class=\"listing-item-content listing-item-link no-underline\" data-ffref=\"{{ffref2}}\" href=\"%7b%7bProductUrl2%7d%7d.html\"><h5 class=\"listing-item-content-brand\">{{DesignerName}}</h5><p class=\"listing-item-content-description\">{{Description}}</p><span class=\"listing-item-content-price\">{{PriceDisplay}}</span></a></article></div>\n<div class=\"tmpl_intro-1\"><div class=\"title\"><h1 class=\"bold center\"><span id=\"tmpl-head\">Cover story!<br />What’s modest now?</span></h1></div><div class=\"text book center\"><span id=\"tmpl-sell\">SS18 reveals new ways to conceal. From kaftan silhouettes to the ultra-slick trench, here are 6 ways to cover up this season…</span></div><div class=\"credit center\"><span id=\"tmpl-byline\"><strong>PHOTOGRAPHY</strong> SEAN AND SENG AT MANAGEMENT + ARTISTS.<strong> STYLING</strong> MARK VASSALLO. <strong>MODEL</strong> NORA ATTAL AT VIVA LONDON. <strong>HAIR</strong>PAOLO SOFFIATTI AT BRYANT ARTISTS. <strong>MAKEUP</strong> GEORGINA GRAHAM AT MANAGEMENT + ARTISTS.</span>\n<h1></h1>\n<br>\n<img class=\"hidden-xl hidden-md visible-sm visible-xs\" src=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/1-lg.jpg\" /></div></div>\n<div class=\"tmpl_intro-1\"><div class=\"title\"><h1 class=\"bold center\"><span id=\"tmpl-head\">City-boy tailoring</span></h1></div><div class=\"text book center\"><span id=\"tmpl-sell\">Wall Street cover up: Demna raids Gordon Gekko’s wardrobe, trades brogues for pink mules.</span>\n</div>"
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중

###9. 컨텐츠 뷰어 [/ada/boutique/contentsView] / POST <a id="/ada/boutique/contentsView" href="#/ada/boutique/contentsView">¶</a>

*info*

    기능 : 컨텐츠 내용이 노출
    수정 예정 사항 : account 작업이 완료 된 후 return 형식이 변경 될 수 있음.

*parameter*

    content_id : int               // 컨텐츠 ID

*return value*

	// 성공
	{
        "res": 0,
        "data": {
            "accountInfo": {
                            "gender": 2,
                            "gold": 20000,
                            "dia": 1000
            },
            "contents": "<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\n<div class=\"header_container-7\">\n<div class=\"header\">\n<img class=\"hidden-xl hidden-md visible-sm visible-xs\" src=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/00-xsm.jpg\" /></div></div>\n<div class=\"baseline col12 alpha omega\">\n<div class=\"article-content \">\n<div class=\"baseline col12 alpha omega\">\n<div class=\"container\">\n<div class=\"baseline col2 col-md-1 col-sm-1 col-xs-12\">&nbsp;</div>\n<div class=\"baseline col8 col-md-10 col-sm-10 col-xs-12 alpha omega\">\n<article> <div class=\"baseline col12 alpha omega\">\n<div class=\"article-container cards\">\n<link href=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/listing2.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/templates-2.1.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/dynamicProducts-3.0.1.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n<script src=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/css/dynamicProducts-3.0.1.min.js\"></script>\n<div id=\"item-template\"><article class=\"baseline col3 col-md-4 col-sm-4 col-xs-6 alpha omega listing-item mouse-over-element ab-available-sizes-product-card\"><div class=\"listing-item-image\"><a class=\"listing-item-link no-underline\" data-ffref=\"{{ffref}}\" href=\"%7b%7bProductUrl%7d%7d.html\" target=\"_self\"><img alt=\"{{Description2}}\" class=\"imageRollover lazy-img lazy-loaded js-rollover absolute crossfade\" src=\"http://:0/\" /><img alt=\"{{Description3}}\" class=\"absolute rolloverActive\" src=\"http://:1/\" /><noscript>&lt;img src=\"//:2\"&gt;</noscript></a></div><a class=\"listing-item-content listing-item-link no-underline\" data-ffref=\"{{ffref2}}\" href=\"%7b%7bProductUrl2%7d%7d.html\"><h5 class=\"listing-item-content-brand\">{{DesignerName}}</h5><p class=\"listing-item-content-description\">{{Description}}</p><span class=\"listing-item-content-price\">{{PriceDisplay}}</span></a></article></div>\n<div class=\"tmpl_intro-1\"><div class=\"title\"><h1 class=\"bold center\"><span id=\"tmpl-head\">Cover story!<br />What’s modest now?</span></h1></div><div class=\"text book center\"><span id=\"tmpl-sell\">SS18 reveals new ways to conceal. From kaftan silhouettes to the ultra-slick trench, here are 6 ways to cover up this season…</span></div><div class=\"credit center\"><span id=\"tmpl-byline\"><strong>PHOTOGRAPHY</strong> SEAN AND SENG AT MANAGEMENT + ARTISTS.<strong> STYLING</strong> MARK VASSALLO. <strong>MODEL</strong> NORA ATTAL AT VIVA LONDON. <strong>HAIR</strong>PAOLO SOFFIATTI AT BRYANT ARTISTS. <strong>MAKEUP</strong> GEORGINA GRAHAM AT MANAGEMENT + ARTISTS.</span>\n<h1></h1>\n<br>\n<img class=\"hidden-xl hidden-md visible-sm visible-xs\" src=\"https://s3.ap-northeast-2.amazonaws.com/library.dramabible/ADA_WEB/1-lg.jpg\" /></div></div>\n<div class=\"tmpl_intro-1\"><div class=\"title\"><h1 class=\"bold center\"><span id=\"tmpl-head\">City-boy tailoring</span></h1></div><div class=\"text book center\"><span id=\"tmpl-sell\">Wall Street cover up: Demna raids Gordon Gekko’s wardrobe, trades brogues for pink mules.</span>\n</div>"
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중



###10. 태그 리스트 [/ada/boutique/tagList] / POST <a id="/ada/boutique/tagList" href="#/ada/boutique/tagList">¶</a>

*info*

    기능 : 컨텐츠 내용이 노출
    수정 예정 사항 : account 작업이 완료 된 후 return 형식이 변경 될 수 있음.
	태그타입 : category 1,subcategory 2,collection 3,brand 4,style 5,color 6,featured 7,mat 8,patten 9,parts 10

*parameter*

            client_uid : string				// 미적용 - 디바이스 UID
    		os : string						// 미적용 - OS : enum(ios/android/web)
    		access_token : string			// 미적용 - access token
    		- 이하 contents var -
            search_type : int               // all 0, sale 1, new 2, category 3, brand 4, featured 5
            cate_val : int                  // tagType 1, category ID
            subcate_val : int               // tagType 2, sub category ID
            collection_val : int            // tagType 3, collection ID
            brand_val : int                 // tagType 4, brand ID
            style_val : int                 // tagType 5, style ID
            color_val : int                 // tagType 6, color ID
			featured_val : int              // tagType 7, featured ID
            

*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "accountInfo": {
                "gender": 2,
                "gold": 20000,
                "dia": 1000
            },
            "tagList": [
                {
                    "tagType": 0,				// 태그타입 
                    "tagValue": 1,				// 태그값
                    "tagName": "SALES",			// 태그문자
                    "check": 1					// 태그 선택여부 checked 1, no check 0
                },
                {
                    "tagType": 1,
                    "tagValue": 1,
                    "tagName": "Tops",
                    "check": 1
                },
                {
                    "tagType": 2,
                    "tagValue": 13,
                    "tagName": "T-shirt",
                    "check": 1
                },
                ... 태그 리스트 반복
            ]
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중



##Wish <a id="Wish" href="#Wish">¶</a>

###1. 위시 등록/삭제 [/ada/wish/edit] / POST <a id="/ada/wish/edit" href="#/ada/wish/edit">¶</a>

*info*

    기능 : 상품의 wish를  등록 또는 삭제한다.
    
*parameter*

	client_uid : string				// 필수, 디바이스 UID
	os : string						// 필수, OS : enum(ios/android/web)
	access_token : string			// 선택 - 토큰이 없을경우 null, access token
	- 이하 contents var -
    sale_id : int                   // product id

*return value*

    // 성공
     {
        "res": 0,
        "msg": "wish is edit",
        "data": {
            "wishInfo": {
                "isWish": 0			// wish 처리상태 : 1 wish등록, 2 wish해제
            }
        }
    }

    //실패
    {
        "res": int,					// 0 이 아닌 값,
        "msg": string.              // 오류 메세지
        "data": null
    }

*res*

    0 : 성공　
    ? : 정리중


###2. 위시 리스트 보기 [/ada/wish/wishList] / POST <a id="/ada/wish/wishList" href="#/ada/wish/wishList">¶</a>

*info*

    기능 : wish 리스트 보기 - 상품 리스트, 상세 api에 있고우선 리스트기능은 보류한다.
    수정 예정 사항 :  account 작업이 완료 된 후 return 형식이 변경 될 수 있음.


*parameter*

	client_uid: string			// 디바이스 UID
	os : string					// OS : enum(ios/android/web)
    pdt_id : int                // product id

*return value*

	// 성공
	{
        "res": 0,
        "msg": "처리 성공",
        "data": {
            "productWish": 1    // 1 등록, 0 삭제
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중


###3. like 등록/삭제 [/ada/like/edit] / POST <a id="/ada/like/edit" href="#/ada/like/edit">¶</a>

*info*

    기능 : 상품의 like를  등록 또는 삭제하고 카운트를 받는다..
    
*parameter*

	client_uid : string				// 필수, 디바이스 UID
	os : string						// 필수, OS : enum(ios/android/web)
	access_token : string			// 필수, access token
	- 이하 contents var -
    sale_id : int                   // product id

*return value*

    // 성공
     {
        "res": 0,
        "msg": "wish is edit",
        "data": {
            "wishInfo": {
                "isWish": 0			// likw 처리상태 : 1 likw등록, 2 likw해제
            }
        }
    }

    //실패
    {
        "res": int,					// 0 이 아닌 값,
        "msg": string.              // 오류 메세지
        "data": null
    }

*res*

    0 : 성공　
    ? : 정리중


##Cart <a id="Cart" href="#Cart">¶</a>

###1. 장바구니 등록/삭제/구매처리 [/ada/cart/edit] / POST <a id="/ada/cart/edit" href="#/ada/cart/edit">¶</a>

*info*

    기능 : 상품을 장바구니에 저장하거나 삭제하고, 장바구니의 최종 구매처리를 한다.
    
*parameter*

	client_uid : string				// 필수, 디바이스 UID
	os : string						// 필수, OS : enum(ios/android/web)
	access_token : string			// 필수  access token
	- 이하 contents var -
    sale_id : int                   // product id
	action_type : int               // 1 : 장바구니 저장, 2 : 장바구니 삭제, 3 : 구매완료

*return value*

    // 성공
     {
        "res": 0,
        "msg": "cart is edit",
        "data": {
           "sucess"
        }
    }

    //실패
    {
		"res": -1,
		"msg": "fail:-210302",
		"data": {}
	}

*res*

    0 : 성공　
    ? : 정리중


##Etc <a id="etc" href="#etc">¶</a>


###1. 통신테스트 [/ada/etc/test] / POST <a id="/ada/etc/test" href="#/ada/etc/test">¶</a>

*info*

    기능 : api 서버의 통신상태를 확인한다.
	설명 : os, clientUID 값만 수신하고, 접속된 ip정보를 리턴한다.

*parameter*

	client_uid: string			// 디바이스 UID
	os : string					// OS : enum(ios/android/web)


*return value*

	// 성공
	{
        "res": 0,
        "msg": "search success",
        "data": {
            "IMG_SERVER_URL": "http://35.194.222.5",
            "CLIENT_IP": "106.250.172.162",
            "API_PATH": "/ada/etc/test"
        }
    }

    //실패
    {
        "res": int,						// 0 이 아닌 값,
		"msg": string.					// 오류 메세지
		"data": null
    }

*res*

    0 : 성공　
    ? : 정리중