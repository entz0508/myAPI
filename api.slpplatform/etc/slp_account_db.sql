/*
SQLyog Community v12.12 (64 bit)
MySQL - 5.6.19-log : Database - slp_account_db
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`slp_account_db` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `slp_account_db`;

/*Table structure for table `account_allow_access_app_tb` */

DROP TABLE IF EXISTS `account_allow_access_app_tb`;

CREATE TABLE `account_allow_access_app_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `APP_ID` bigint(20) NOT NULL,
  `REG_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`,`APP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `account_allow_access_app_tb` */

insert  into `account_allow_access_app_tb`(`ACCOUNT_ID`,`APP_ID`,`REG_DATETIME`) values (100000035,1000000000,'2015-07-20 16:11:19'),(100000036,1000000000,'2015-07-20 16:11:19'),(100000037,1000000000,'2015-07-20 16:11:19'),(100000044,1000000000,'2015-07-20 16:11:19'),(100000045,1000000000,'2015-07-20 16:11:19'),(100000046,1000000000,'2015-07-20 16:11:19'),(100000052,1000000000,'2015-07-20 16:11:19'),(100000053,1000000000,'2015-07-20 16:11:19'),(100000054,1000000000,'2015-07-20 16:11:19'),(100000055,1000000000,'2015-07-20 16:11:19'),(100000056,1000000000,'2015-07-20 16:11:19'),(100000057,1000000000,'2015-07-20 16:11:19'),(100000058,1000000000,'2015-07-20 16:11:19'),(100000059,1000000000,'2015-07-20 16:11:19'),(100000060,1000000000,'2015-07-20 16:11:19'),(100000061,1000000000,'2015-07-20 16:11:19'),(100000062,1000000000,'2015-07-20 16:11:19'),(100000063,1000000000,'2015-07-20 16:11:19'),(100000088,1000000000,'2015-07-20 16:11:19'),(100000089,1000000000,'2015-07-20 16:11:19'),(100000090,1000000000,'2015-07-20 16:11:19'),(100000091,1000000000,'2015-07-20 16:11:19'),(100000092,1000000000,'2015-07-20 16:11:19'),(100000093,1000000000,'2015-07-20 16:11:19'),(100000094,1000000000,'2015-07-20 16:11:19'),(100000095,1000000000,'2015-07-20 16:11:19'),(100000096,1000000000,'2015-07-20 16:11:19'),(100000096,1000000003,'2015-04-28 17:40:45'),(100000097,1000000000,'2015-07-20 16:11:19'),(100000097,1000000003,'2015-05-06 17:48:58'),(100000098,1000000000,'2015-07-20 16:11:19'),(100000098,1000000003,'2015-05-08 16:50:47'),(100000099,1000000000,'2015-07-20 16:11:19'),(100000100,1000000000,'2015-07-20 16:11:19'),(100000100,1000000003,'2015-05-08 17:30:26'),(100000101,1000000000,'2015-07-20 16:11:19'),(100000101,1000000003,'2015-05-11 11:45:49'),(100000102,1000000000,'2015-07-20 16:11:19'),(100000102,1000000003,'2015-05-20 16:22:42'),(100000113,1000000000,'2015-07-20 16:11:19'),(100000113,1000000003,'2015-07-13 18:52:14');

/*Table structure for table `account_signup_info_tb` */

DROP TABLE IF EXISTS `account_signup_info_tb`;

CREATE TABLE `account_signup_info_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `SIGNUP_APP_ID` bigint(20) NOT NULL,
  `SIGNUP_UID` varchar(64) NOT NULL,
  `SIGNUP_PATH` enum('slp','google','facebook') NOT NULL,
  `CLIENT_UID` varchar(64) NOT NULL,
  `REG_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `account_signup_info_tb` */

insert  into `account_signup_info_tb`(`ACCOUNT_ID`,`SIGNUP_APP_ID`,`SIGNUP_UID`,`SIGNUP_PATH`,`CLIENT_UID`,`REG_DATETIME`) values (100000035,1000000000,'','slp','','2015-03-10 14:21:15'),(100000036,1000000000,'','slp','','2015-03-10 14:29:57'),(100000037,1000000000,'','slp','','2015-03-10 15:15:23'),(100000044,1000000000,'','slp','','2015-03-10 15:31:32'),(100000045,1000000000,'','slp','','2015-03-10 15:31:48'),(100000046,1000000000,'','slp','','2015-03-10 15:52:16'),(100000052,1000000000,'','slp','','2015-03-23 19:11:07'),(100000053,1000000000,'','slp','','2015-03-24 11:46:46'),(100000054,1000000000,'','slp','','2015-03-24 20:01:27'),(100000055,1000000000,'','slp','','2015-03-25 10:13:33'),(100000056,1000000000,'','slp','','2015-03-25 10:19:14'),(100000057,1000000000,'','slp','','2015-03-25 10:19:40'),(100000058,1000000000,'','slp','','2015-03-25 10:20:00'),(100000059,1000000000,'','slp','','2015-03-25 10:21:01'),(100000060,1000000000,'','slp','','2015-03-25 10:33:10'),(100000061,1000000000,'','slp','','2015-03-25 10:33:32'),(100000062,1000000000,'','slp','','2015-03-25 10:33:54'),(100000063,1000000000,'','slp','','2015-03-25 10:35:50'),(100000088,1000000000,'','slp','','2015-03-25 16:39:49'),(100000089,1000000000,'','slp','','2015-03-25 16:53:01'),(100000090,1000000000,'','slp','','2015-03-25 18:13:20'),(100000091,1000000000,'','slp','','2015-03-25 19:47:48'),(100000092,1000000000,'','slp','','2015-03-25 20:02:12'),(100000093,1000000000,'','slp','','2015-03-25 20:10:40'),(100000094,1000000000,'','slp','','2015-03-25 20:20:14'),(100000095,1000000000,'','slp','','2015-03-27 13:47:44'),(100000096,1000000000,'','slp','','2015-03-27 14:08:50'),(100000097,1000000003,'','slp','','2015-05-06 17:46:46'),(100000098,1000000003,'','slp','','2015-05-08 16:50:22'),(100000099,1000000003,'','slp','','2015-05-08 17:01:01'),(100000100,1000000003,'','slp','','2015-05-08 17:27:14'),(100000101,1000000003,'','slp','','2015-05-11 11:45:15'),(100000102,1000000003,'','slp','','2015-05-20 16:22:10'),(100000113,1000000003,'','slp','','2015-07-13 18:51:20');

/*Table structure for table `account_tb` */

DROP TABLE IF EXISTS `account_tb`;

CREATE TABLE `account_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `EMAIL` varchar(64) NOT NULL,
  `PWD` varchar(128) NOT NULL,
  `STAR_POINT` int(11) NOT NULL DEFAULT '0',
  `COUNTRY` varchar(2) NOT NULL,
  `SIGNUP_PATH` enum('slp','google','facebook') NOT NULL,
  `APP_ID` bigint(20) NOT NULL,
  `BLOCK` enum('n','y') NOT NULL DEFAULT 'n',
  `DELETED` enum('n','y') NOT NULL DEFAULT 'n',
  `REG_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`),
  UNIQUE KEY `IDX_EMAIL` (`EMAIL`)
) ENGINE=InnoDB AUTO_INCREMENT=100000114 DEFAULT CHARSET=utf8;

/*Data for the table `account_tb` */

insert  into `account_tb`(`ACCOUNT_ID`,`EMAIL`,`PWD`,`STAR_POINT`,`COUNTRY`,`SIGNUP_PATH`,`APP_ID`,`BLOCK`,`DELETED`,`REG_DATETIME`) values (100000035,'heesung6@blueark.com','1ARVn2Auq2/WAqx2gNrL+q3RNjAzXpUfCXrzkA6d4Xa22yhRLy4AC50E+6UTPoscbo31nbOoq51gvkuXzJ6B2w==',100,'kr','slp',0,'n','n','2015-03-10 14:21:15'),(100000036,'heesung1@blueark.com','1ARVn2Auq2/WAqx2gNrL+q3RNjAzXpUfCXrzkA6d4Xa22yhRLy4AC50E+6UTPoscbo31nbOoq51gvkuXzJ6B2w==',100,'kr','slp',0,'n','n','2015-03-10 14:29:57'),(100000037,'heesung2@blueark.com','1ARVn2Auq2/WAqx2gNrL+q3RNjAzXpUfCXrzkA6d4Xa22yhRLy4AC50E+6UTPoscbo31nbOoq51gvkuXzJ6B2w==',100,'kr','slp',0,'n','n','2015-03-10 15:15:23'),(100000044,'heesung3@blueark.com','1ARVn2Auq2/WAqx2gNrL+q3RNjAzXpUfCXrzkA6d4Xa22yhRLy4AC50E+6UTPoscbo31nbOoq51gvkuXzJ6B2w==',100,'kr','slp',0,'n','n','2015-03-10 15:31:32'),(100000045,'heesung4@blueark.com','1ARVn2Auq2/WAqx2gNrL+q3RNjAzXpUfCXrzkA6d4Xa22yhRLy4AC50E+6UTPoscbo31nbOoq51gvkuXzJ6B2w==',100,'kr','slp',0,'n','n','2015-03-10 15:31:48'),(100000046,'heesung5@blueark.com','1ARVn2Auq2/WAqx2gNrL+q3RNjAzXpUfCXrzkA6d4Xa22yhRLy4AC50E+6UTPoscbo31nbOoq51gvkuXzJ6B2w==',100,'kr','slp',0,'n','n','2015-03-10 15:52:16'),(100000052,'heesung7@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-23 19:11:07'),(100000053,'heesung8@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-24 11:46:46'),(100000054,'heesung9@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-24 20:01:27'),(100000055,'1427246343heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-25 10:13:33'),(100000056,'1427246376heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-25 10:19:14'),(100000057,'1427246395heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-25 10:19:40'),(100000058,'1427246460heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-25 10:20:00'),(100000059,'1427247175heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'kr','slp',1000000000,'n','n','2015-03-25 10:21:01'),(100000060,'1427247209heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 10:33:10'),(100000061,'1427247229heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 10:33:32'),(100000062,'1427247344heesung@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 10:33:54'),(100000063,'heesung@blueark.com','jgVrZdjFyLXBhAp20pPfQGytWbYZX9SuET3jkpWnn0U7j1KBqiZWqCwg9T3ZShAjkyh6yj1bsE2r5/Lo+duB5A==',100,'KR','slp',1000000000,'n','n','2015-03-25 10:35:50'),(100000088,'heesung13@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 16:39:49'),(100000089,'heesung14@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 16:53:01'),(100000090,'heesung15@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 18:13:20'),(100000091,'heesung16@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 19:47:48'),(100000092,'heesung17@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 20:02:12'),(100000093,'heesung18@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 20:10:40'),(100000094,'heesung19@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-25 20:20:14'),(100000095,'heesung20@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-27 13:47:44'),(100000096,'heesung21@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000000,'n','n','2015-03-27 14:08:50'),(100000097,'heesung22@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-05-06 17:46:46'),(100000098,'heesung25@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-05-08 16:50:22'),(100000099,'heesung26@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-05-08 17:01:01'),(100000100,'heesung27@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-05-08 17:27:14'),(100000101,'heesung28@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-05-11 11:45:15'),(100000102,'heesung29@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-05-20 16:22:10'),(100000113,'heesung30@blueark.com','ujJTh2rta8ItSm/1PYQGxq2GQZXtFEq1yHYhtsIztUi66uaVbfNG7IwX9eoQ817jy8UUeX7X3dMUVGTioLq0Ew==',100,'KR','slp',1000000003,'n','n','2015-07-13 18:51:19');

/*Table structure for table `app_access_token_tb` */

DROP TABLE IF EXISTS `app_access_token_tb`;

CREATE TABLE `app_access_token_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `APP_ID` bigint(20) NOT NULL,
  `CLIENT_UID` varchar(64) NOT NULL,
  `PROFILE_ID` bigint(20) NOT NULL DEFAULT '0',
  `TOKEN` varchar(40) NOT NULL,
  `TOKEN_UPDATE` datetime NOT NULL,
  `REG_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`,`APP_ID`,`CLIENT_UID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `app_access_token_tb` */

insert  into `app_access_token_tb`(`ACCOUNT_ID`,`APP_ID`,`CLIENT_UID`,`PROFILE_ID`,`TOKEN`,`TOKEN_UPDATE`,`REG_DATETIME`) values (100000035,1000000000,'test_web',0,'3e61b4f66bc32e481f2b9154f46e33ca3c460610','2015-03-10 14:21:15','2015-03-10 14:21:15'),(100000036,1000000000,'test_web',0,'4345c0f07bf870418ea8ca0f631a82219f2bd84b','2015-03-10 14:29:57','2015-03-10 14:29:57'),(100000037,1000000000,'test_web',0,'f06b43e9a0e8d5d0b746d56955edd59499284bcb','2015-03-10 15:47:34','2015-03-10 15:15:23'),(100000044,1000000000,'test_web',0,'3244d9d960be83da43adf1679bfa4fb08f476ed8','2015-03-10 15:31:32','2015-03-10 15:31:32'),(100000045,1000000000,'test_web',0,'bba92494276c7019de360be3f1142ef38cbce450','2015-03-10 15:31:48','2015-03-10 15:31:48'),(100000046,1000000000,'test_web',100048,'2d0d5eb7b0148f37ebdd4eed5eba228ae097c777','2015-03-10 17:36:57','2015-03-10 15:52:16'),(100000052,1000000000,'test_web111111',100061,'9a5b2cdb2ed82f94aec3f086675de8cedff82b3f','2015-03-23 19:11:07','2015-03-23 19:11:07'),(100000053,1000000000,'test_web111111',100063,'9316379752d0e2e13a628ff9d450205fb9773bd5','2015-03-24 11:46:47','2015-03-24 11:46:47'),(100000053,1000000000,'test_web_1234',100063,'3c673d01cf8792680f829a945e24db3131b82b79','2015-03-25 14:10:32','2015-03-24 13:57:09'),(100000054,1000000000,'test_web111111',100072,'d2419e5f74ea2aa1fca1eb4e57312e8c1ee67bab','2015-03-24 20:01:27','2015-03-24 20:01:27'),(100000055,1000000000,'test_web111111',100074,'748e414ffef771ab80abccabbc248b51deb2c079','2015-03-25 10:13:33','2015-03-25 10:13:33'),(100000056,1000000000,'test_web111111',100076,'19008249adc982c3b67b21116c81dbde417358b0','2015-03-25 10:19:14','2015-03-25 10:19:14'),(100000057,1000000000,'test_web111111',100078,'65dc4fdffb10bbc18cf50d2c1575e6b354c6e0ac','2015-03-25 10:19:40','2015-03-25 10:19:40'),(100000058,1000000000,'test_web111111',100080,'1aefd76158beed2640d5fdf00b11d20ef52c83d1','2015-03-25 10:20:00','2015-03-25 10:20:00'),(100000059,1000000000,'test_web111111',100082,'7d3ee92001bcce3897cc7f0bd66fef17517626f9','2015-03-25 10:21:01','2015-03-25 10:21:01'),(100000060,1000000000,'test_web111111',100084,'d134061433bb5562d431b385d5605830a5378d05','2015-03-25 10:33:10','2015-03-25 10:33:10'),(100000061,1000000000,'test_web111111',100086,'752d5945395e8ceb7b1eaf1a5536655dc70b398a','2015-03-25 10:33:32','2015-03-25 10:33:32'),(100000062,1000000000,'test_web111111',100088,'6f3c82dec3008b0a27adb6b0eb4cd54d1ee4f25c','2015-03-25 10:33:54','2015-03-25 10:33:54'),(100000063,1000000000,'test_web111111',100090,'46c406d19a2feee32e5d1292cd0d39c168e7d62d','2015-03-25 10:35:50','2015-03-25 10:35:50'),(100000088,1000000000,'test_web111111',100092,'dfaa0064e92002f347490882d49f02ff4e866896','2015-03-25 16:41:22','2015-03-25 16:39:49'),(100000089,1000000000,'test_web111111',100094,'350e5150b4d21f029e0558a30156a465e12e11c9','2015-03-25 16:53:19','2015-03-25 16:53:01'),(100000090,1000000000,'test_web111111',100097,'7d383c02fc71d59a9402a48791c62fa8ffcf9712','2015-03-25 19:05:12','2015-03-25 18:13:20'),(100000091,1000000000,'test_web111111',100100,'771e465d5a771f721a8ef9737f670afed1c6f28b','2015-03-25 19:50:01','2015-03-25 19:47:49'),(100000092,1000000000,'test_web111111',100102,'f1babf123dd0d0b69fddb3e5c8164c61a12b423f','2015-03-25 20:02:22','2015-03-25 20:02:22'),(100000093,1000000000,'test_web111111',100104,'439f97c7490e2c4b63c2a6845f0359c92d7d3c06','2015-03-25 20:10:52','2015-03-25 20:10:52'),(100000094,1000000000,'test_web111111',100106,'393277dfcc4c11aba7b8ad8dc5150b61af226077','2015-03-25 20:20:21','2015-03-25 20:20:21'),(100000095,1000000000,'',0,'f747b83c550aa009783c94ac747be88263050c45','2015-03-27 13:47:44','2015-03-27 13:47:44'),(100000095,1000000000,'test_web111111',100109,'957509ce7fcf30cd0b2ed051c9c6c11c9292c93b','2015-03-27 13:50:17','2015-03-27 13:47:58'),(100000096,1000000000,'',0,'1c16f6c0d837801b53424afddd441bb9ea8a5976','2015-03-27 14:08:50','2015-03-27 14:08:50'),(100000096,1000000000,'test_web111111',100113,'63f0f83403245aab677379e70249e1d5aaf598ce','2015-03-27 14:08:57','2015-03-27 14:08:57'),(100000096,1000000003,'1430211923',100113,'554946ca79befcf2463f4528a9304fec455e340e','2015-04-28 18:41:44','2015-04-28 18:41:44'),(100000096,1000000003,'test_web111111',100113,'dcf474131b3c9e9c61d86db8e60a3ebc944e0853','2015-04-28 18:39:33','2015-04-28 17:40:28'),(100000097,1000000003,'',0,'fc2df67665a5edfb722bcaa2848e0acc7d4bebea','2015-05-06 17:46:46','2015-05-06 17:46:46'),(100000097,1000000003,'1430211923',100115,'26c3d323d7571d5c57e6c95a4d4bee404627ef4d','2015-05-06 17:47:10','2015-05-06 17:47:10'),(100000098,1000000003,'',0,'138d78bebbe406cae7a67eef5383855d62982df2','2015-05-08 16:50:22','2015-05-08 16:50:22'),(100000098,1000000003,'1430211923',100117,'828a0250681a5eeff39fe0f400d8d573ef2e5aba','2015-05-08 16:50:34','2015-05-08 16:50:34'),(100000100,1000000003,'',0,'e38ccb96b5405a29f6ffa7cd2d605d9ccfb814a2','2015-05-08 17:27:14','2015-05-08 17:27:14'),(100000100,1000000003,'1430211923',100121,'428542136860c6dbf293e515b2c9dd525c643aa7','2015-05-08 17:30:09','2015-05-08 17:30:09'),(100000101,1000000003,'',0,'d5ffb3495f4bd6cc7af82406b35da3d2adec4249','2015-05-11 11:45:15','2015-05-11 11:45:15'),(100000101,1000000003,'1430211900',100123,'330a3b34f0b56ebfe00df0984eaf057f3b106f1d','2015-05-11 11:45:33','2015-05-11 11:45:33'),(100000102,1000000003,'',0,'b12d5e559c7c051d66209b19f7ba14030d45b361','2015-05-20 16:22:10','2015-05-20 16:22:10'),(100000102,1000000003,'1430211900',100125,'94e1db7f468cb661ac977a7c18271c4bcb722135','2015-05-20 16:22:50','2015-05-20 16:22:29'),(100000102,1000000003,'143021196',100125,'b6fe30a6d4f77921b7048aa5315d3f376f23bdc7','2015-07-13 16:20:16','2015-05-20 16:24:57'),(100000113,1000000000,'143021196',100127,'bc1ba20710d713ffbd4088bf5ae8c8caa43c666b','2015-07-20 16:15:17','2015-07-20 16:15:17'),(100000113,1000000001,'1000000001-1',100127,'b8ba1ee0a76200a0dcb150b2627cb58abf1703c7','2015-08-03 15:55:32','2015-08-03 15:55:32'),(100000113,1000000001,'143021196',100127,'aa651c22dede0b818a83febe6eab7729378a508b','2015-08-03 15:43:28','2015-08-03 15:43:28'),(100000113,1000000003,'',0,'38a6d9285453872de34c1b9927433ea27f1e4ca1','2015-07-13 18:51:20','2015-07-13 18:51:20'),(100000113,1000000003,'143021196',100127,'7e42489fa27c4f601ba4570c01dc7d66edc89046','2015-07-20 16:14:15','2015-07-13 18:51:40'),(1000000003,100000099,'',0,'55e8d7045876e02e11f3a9bdbaaa0d0f00148b58','2015-05-08 17:01:01','2015-05-08 17:01:01'),(1000000003,100000099,'1430211923',0,'08bae1375f56c1500b4c033fb5ff86383fa19e26','2015-05-08 17:01:32','2015-05-08 17:01:09');

/*Table structure for table `constant_number_tb` */

DROP TABLE IF EXISTS `constant_number_tb`;

CREATE TABLE `constant_number_tb` (
  `KEY` varchar(32) NOT NULL,
  `VALUE` int(11) DEFAULT '0',
  PRIMARY KEY (`KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `constant_number_tb` */

insert  into `constant_number_tb`(`KEY`,`VALUE`) values ('FORGOT_PWD_LIMIT_TIME',30),('KW_APP_ID',1000000000),('MAX_PROFILE',4),('MIN_INT',-9999999),('SIGNUP_STAR_POINT',100);

/*Table structure for table `error_code_info_tb` */

DROP TABLE IF EXISTS `error_code_info_tb`;

CREATE TABLE `error_code_info_tb` (
  `CODE` int(11) NOT NULL,
  `MSG` varchar(100) NOT NULL,
  PRIMARY KEY (`CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `error_code_info_tb` */

insert  into `error_code_info_tb`(`CODE`,`MSG`) values (-200014,'failed, Update App Access Current Profile ID'),(-200013,'failed, Not found Profile ID'),(-200011,'Not Match E-Mail or Password'),(-200010,'Not Found E-Mail'),(-200009,'failed, Update App Access Token'),(-200008,'failed, Insert Account Allow Access APP'),(-200007,'(Nfailed, Insert SignupInfoULL)'),(-200006,'failed, Add Profile Hidden'),(-200005,'failed, Add Profile'),(-200004,'failed, Add Mileage'),(-200003,'failed, Add Mileage'),(-200002,'계정 추가 실패'),(-200001,'Duplicate Account Email');

/*Table structure for table `forgot_pwd_token_tb` */

DROP TABLE IF EXISTS `forgot_pwd_token_tb`;

CREATE TABLE `forgot_pwd_token_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `TOKEN` varchar(40) NOT NULL,
  `CLIENT_IP` varchar(15) NOT NULL,
  `REG_DATETIME` datetime NOT NULL,
  `CHANGE` enum('n','y','d') NOT NULL,
  `CHANGE_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`,`TOKEN`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `forgot_pwd_token_tb` */

insert  into `forgot_pwd_token_tb`(`ACCOUNT_ID`,`TOKEN`,`CLIENT_IP`,`REG_DATETIME`,`CHANGE`,`CHANGE_DATETIME`) values (100000063,'135f62d8c3cfe0cc7f1cc539786a714bf682f571','::1','2015-04-09 16:14:22','d','2015-04-09 16:14:23'),(100000063,'1bf521ba6721e2f3db044b1efa0854494c50f6d4','::1','2015-04-09 16:12:40','y','0000-00-00 00:00:00'),(100000063,'205d50cbb604926fb678f10237f80190839cf6b8','::1','2015-04-09 16:13:55','d','0000-00-00 00:00:00'),(100000063,'2a0a3da0c95b1b3030b5c3763194e9ca2483fb72','::1','2015-04-09 16:13:56','d','0000-00-00 00:00:00'),(100000063,'3d93b87aa1dc0450a992b3421d8cb30defe8b527','::1','2015-04-09 16:13:04','y','0000-00-00 00:00:00'),(100000063,'50bb5b909c30823ecf5cff1d0ff742a24aec9383','::1','2015-04-09 16:14:23','n','0000-00-00 00:00:00'),(100000063,'6c9a6d1d540f967a31bee583f232117ed8bbec99','::1','2015-04-09 16:14:01','d','0000-00-00 00:00:00'),(100000063,'932a1563ab0bfb787efd87b411bf35e37707d439','::1','2015-04-09 16:13:08','y','0000-00-00 00:00:00'),(100000063,'996bbe0a1a6de6c4643562b209b47f4cca7fc385','::1','2015-04-09 16:12:22','y','0000-00-00 00:00:00'),(100000063,'a808d94c7c607fa33ed19135b19bc85eacb748d4','::1','2015-04-09 16:14:02','d','2015-04-09 16:14:22'),(100000063,'cb33cb4887d406ed2427563f2d86147b48bc9949','::1','2015-04-09 15:27:17','y','0000-00-00 00:00:00'),(100000063,'e07cb09bd48e747050991cb2bae64bdfd7d5af0c','::1','2015-04-09 16:14:22','d','2015-04-09 16:14:22'),(100000063,'e0d4afb657e076b98520023888595a68f399eb23','::1','2015-04-09 16:14:22','d','2015-04-09 16:14:22'),(100000063,'e3630a631a4809278c539b01fd884ac937d2777e','::1','2015-04-09 16:08:11','y','2015-04-09 16:09:54'),(100000063,'e4e8ee59fb24f24b92224d9a6996e4b9b03f31fa','::1','2015-04-09 16:13:14','d','0000-00-00 00:00:00'),(100000063,'f07b505a0f6d159f3610d5fd676c47cac9bc66fc','::1','2015-04-09 16:13:57','d','0000-00-00 00:00:00');

/*Table structure for table `kidswatts_login_count` */

DROP TABLE IF EXISTS `kidswatts_login_count`;

CREATE TABLE `kidswatts_login_count` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `COUNT` int(11) DEFAULT NULL,
  PRIMARY KEY (`ACCOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `kidswatts_login_count` */

/*Table structure for table `profile_tb` */

DROP TABLE IF EXISTS `profile_tb`;

CREATE TABLE `profile_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `PROFILE_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(32) NOT NULL,
  `BIRTHDAY` date NOT NULL DEFAULT '0000-00-00',
  `GENDER` enum('m','f') NOT NULL,
  `IMG_SERVER_IDX` tinyint(4) NOT NULL DEFAULT '0',
  `IMG_URL` varchar(128) NOT NULL DEFAULT '',
  `HIDDEN` enum('n','y') NOT NULL,
  `DELETED` enum('n','y') NOT NULL DEFAULT 'n',
  `REG_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`,`PROFILE_ID`),
  KEY `PROFILE_ID` (`PROFILE_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=100128 DEFAULT CHARSET=utf8;

/*Data for the table `profile_tb` */

insert  into `profile_tb`(`ACCOUNT_ID`,`PROFILE_ID`,`NAME`,`BIRTHDAY`,`GENDER`,`IMG_SERVER_IDX`,`IMG_URL`,`HIDDEN`,`DELETED`,`REG_DATETIME`) values (100000035,100026,'프로파일','2011-01-01','m',0,'','n','n','2015-03-10 14:21:15'),(100000035,100027,'hidden_100000035','2015-01-01','m',0,'','y','n','2015-03-10 14:21:15'),(100000036,100028,'프로파일','2011-01-01','m',0,'','n','n','2015-03-10 14:29:57'),(100000036,100029,'hidden_100000036','2015-01-01','m',0,'','y','n','2015-03-10 14:29:57'),(100000037,100030,'프로파일','2011-01-01','m',0,'','n','n','2015-03-10 15:15:23'),(100000037,100031,'hidden_100000037','2015-01-01','m',0,'','y','n','2015-03-10 15:15:23'),(100000044,100044,'프로파일','2011-01-01','m',0,'','n','n','2015-03-10 15:31:32'),(100000044,100045,'hidden_100000044','2015-01-01','m',0,'','y','n','2015-03-10 15:31:32'),(100000045,100046,'프로파일','2011-01-01','m',0,'','n','n','2015-03-10 15:31:48'),(100000045,100047,'hidden_100000045','2015-01-01','m',0,'','y','n','2015-03-10 15:31:48'),(100000046,100048,'프로파일','2011-01-01','m',0,'','n','n','2015-03-10 15:52:16'),(100000046,100049,'hidden_100000046','2015-01-01','m',0,'','y','n','2015-03-10 15:52:16'),(100000052,100060,'hidden_100000052','2015-01-01','m',0,'','y','n','2015-03-23 19:11:07'),(100000052,100061,'프로파일','2011-01-01','m',0,'','n','n','2015-03-23 19:11:07'),(100000053,100062,'hidden_100000053','2015-01-01','m',0,'','y','n','2015-03-24 11:46:47'),(100000053,100063,'프로파일','2011-01-01','m',0,'','n','n','2015-03-24 11:46:47'),(100000053,100064,'프로파일2','2011-01-01','m',0,'','n','n','2015-03-24 19:25:05'),(100000053,100065,'프로파일3','2011-01-01','m',0,'','n','n','2015-03-24 19:29:05'),(100000053,100066,'프로파일4','2011-01-01','m',0,'','n','n','2015-03-24 19:29:08'),(100000054,100067,'프로파일2','2011-01-01','m',0,'','n','n','2015-03-24 19:45:57'),(100000054,100068,'프로파일3','2011-01-01','m',0,'','n','n','2015-03-24 19:46:00'),(100000054,100069,'프로파일4','2011-01-01','m',0,'','n','n','2015-03-24 19:46:03'),(100000054,100070,'프로파일5','2011-01-01','m',0,'','n','n','2015-03-24 19:46:07'),(100000054,100071,'hidden_100000054','2015-01-01','m',0,'','y','n','2015-03-24 20:01:27'),(100000054,100072,'프로파일','2011-01-01','m',0,'','n','n','2015-03-24 20:01:27'),(100000055,100073,'hidden_100000055','2015-01-01','m',0,'','y','n','2015-03-25 10:13:33'),(100000055,100074,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:13:33'),(100000056,100075,'hidden_100000056','2015-01-01','m',0,'','y','n','2015-03-25 10:19:14'),(100000056,100076,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:19:14'),(100000057,100077,'hidden_100000057','2015-01-01','m',0,'','y','n','2015-03-25 10:19:40'),(100000057,100078,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:19:40'),(100000058,100079,'hidden_100000058','2015-01-01','m',0,'','y','n','2015-03-25 10:20:00'),(100000058,100080,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:20:00'),(100000059,100081,'hidden_100000059','2015-01-01','m',0,'','y','n','2015-03-25 10:21:01'),(100000059,100082,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:21:01'),(100000060,100083,'hidden_100000060','2015-01-01','m',0,'','y','n','2015-03-25 10:33:10'),(100000060,100084,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:33:10'),(100000061,100085,'hidden_100000061','2015-01-01','m',0,'','y','n','2015-03-25 10:33:32'),(100000061,100086,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:33:32'),(100000062,100087,'hidden_100000062','2015-01-01','m',0,'','y','n','2015-03-25 10:33:54'),(100000062,100088,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:33:54'),(100000063,100089,'hidden_100000063','2015-01-01','m',0,'','y','n','2015-03-25 10:35:50'),(100000063,100090,'프로파일','2011-01-01','m',0,'','n','n','2015-03-25 10:35:50'),(100000088,100091,'hidden_100000088','2015-01-01','m',0,'','y','n','2015-03-25 16:39:49'),(100000088,100092,'guest','2015-01-01','m',0,'','n','n','2015-03-25 16:39:49'),(100000089,100093,'hidden_100000089','2015-01-01','m',0,'','y','n','2015-03-25 16:53:01'),(100000089,100094,'guest','2015-01-01','m',0,'','n','n','2015-03-25 16:53:01'),(100000089,100095,'프로파일2','2011-01-01','m',0,'','n','n','2015-03-25 16:53:35'),(100000090,100096,'hidden_100000090','2015-01-01','m',0,'','y','n','2015-03-25 18:13:20'),(100000090,100097,'guest','2015-01-01','m',0,'','n','n','2015-03-25 18:13:20'),(100000090,100098,'프로파일2','2011-01-01','m',0,'','n','y','2015-03-25 18:13:44'),(100000091,100099,'hidden_100000091','2015-01-01','m',0,'','y','n','2015-03-25 19:47:48'),(100000091,100100,'guest','2015-01-01','m',0,'','n','n','2015-03-25 19:47:49'),(100000092,100101,'hidden_100000092','2015-01-01','m',0,'','y','n','2015-03-25 20:02:12'),(100000092,100102,'guest','2015-01-01','m',0,'','n','n','2015-03-25 20:02:12'),(100000093,100103,'hidden_100000093','2015-01-01','m',0,'','y','n','2015-03-25 20:10:40'),(100000093,100104,'guest','2015-01-01','m',0,'','n','n','2015-03-25 20:10:40'),(100000094,100105,'hidden_100000094','2015-01-01','m',0,'','y','n','2015-03-25 20:20:14'),(100000094,100106,'guest','2015-01-01','m',0,'','n','n','2015-03-25 20:20:14'),(100000094,100107,'프로파일2','2011-01-01','m',0,'','n','y','2015-03-25 20:23:07'),(100000095,100108,'hidden_100000095','2015-01-01','m',0,'','y','n','2015-03-27 13:47:44'),(100000095,100109,'guest','2015-01-01','m',0,'','n','n','2015-03-27 13:47:44'),(100000095,100110,'프로파일2','2011-01-01','m',0,'','n','n','2015-03-27 13:55:19'),(100000095,100111,'프로파일2','2011-01-01','m',0,'','n','y','2015-03-27 13:55:24'),(100000096,100112,'hidden_100000096','2015-01-01','m',0,'','y','n','2015-03-27 14:08:50'),(100000096,100113,'guest','2015-01-01','m',0,'','n','n','2015-03-27 14:08:50'),(100000097,100114,'hidden_100000097','2015-01-01','m',0,'','y','n','2015-05-06 17:46:46'),(100000097,100115,'guest','2015-01-01','m',0,'','n','n','2015-05-06 17:46:46'),(100000098,100116,'hidden_100000098','2015-01-01','m',0,'','y','n','2015-05-08 16:50:22'),(100000098,100117,'guest','2015-01-01','m',0,'','n','n','2015-05-08 16:50:22'),(100000099,100118,'hidden_100000099','2015-01-01','m',0,'','y','n','2015-05-08 17:01:01'),(100000099,100119,'guest','2015-01-01','m',0,'','n','n','2015-05-08 17:01:01'),(100000100,100120,'hidden_100000100','2015-01-01','m',0,'','y','n','2015-05-08 17:27:14'),(100000100,100121,'guest','2015-01-01','m',0,'','n','n','2015-05-08 17:27:14'),(100000101,100122,'hidden_100000101','2015-01-01','m',0,'','y','n','2015-05-11 11:45:15'),(100000101,100123,'guest','2015-01-01','m',0,'','n','n','2015-05-11 11:45:15'),(100000102,100124,'hidden_100000102','2015-01-01','m',0,'','y','n','2015-05-20 16:22:10'),(100000102,100125,'guest','2015-01-01','m',0,'','n','n','2015-05-20 16:22:10'),(100000113,100126,'hidden_100000113','2015-01-01','m',0,'','y','n','2015-07-13 18:51:20'),(100000113,100127,'guest','2015-01-01','m',0,'','n','n','2015-07-13 18:51:20');

/*Table structure for table `star_point_history_tb` */

DROP TABLE IF EXISTS `star_point_history_tb`;

CREATE TABLE `star_point_history_tb` (
  `ACCOUNT_ID` bigint(20) NOT NULL,
  `SRL` int(11) NOT NULL AUTO_INCREMENT,
  `INFO` varchar(32) NOT NULL,
  `OLD_STAR_POINT` int(11) NOT NULL,
  `MOD` int(11) NOT NULL,
  `REG_DATETIME` datetime NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`,`SRL`),
  KEY `SRL` (`SRL`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;

/*Data for the table `star_point_history_tb` */

insert  into `star_point_history_tb`(`ACCOUNT_ID`,`SRL`,`INFO`,`OLD_STAR_POINT`,`MOD`,`REG_DATETIME`) values (100000035,1,'SIGNUP_MILEAGE',0,100,'2015-03-10 14:21:15'),(100000036,2,'SIGNUP_MILEAGE',0,100,'2015-03-10 14:29:57'),(100000037,3,'SIGNUP_MILEAGE',0,100,'2015-03-10 15:15:23'),(100000044,4,'SIGNUP_MILEAGE',0,100,'2015-03-10 15:31:32'),(100000045,5,'SIGNUP_MILEAGE',0,100,'2015-03-10 15:31:48'),(100000046,6,'SIGNUP_MILEAGE',0,100,'2015-03-10 15:52:16'),(100000052,7,'SIGNUP_MILEAGE',0,100,'2015-03-23 19:11:07'),(100000053,8,'SIGNUP_MILEAGE',0,100,'2015-03-24 11:46:47'),(100000054,9,'SIGNUP_MILEAGE',0,100,'2015-03-24 20:01:27'),(100000055,10,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:13:33'),(100000056,11,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:19:14'),(100000057,12,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:19:40'),(100000058,13,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:20:00'),(100000059,14,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:21:01'),(100000060,15,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:33:10'),(100000061,16,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:33:32'),(100000062,17,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:33:54'),(100000063,18,'SIGNUP_MILEAGE',0,100,'2015-03-25 10:35:50'),(100000088,19,'SIGNUP_STAR_POINT',0,100,'2015-03-25 16:39:49'),(100000089,20,'SIGNUP_STAR_POINT',0,100,'2015-03-25 16:53:01'),(100000090,21,'SIGNUP_STAR_POINT',0,100,'2015-03-25 18:13:20'),(100000091,22,'SIGNUP_STAR_POINT',0,100,'2015-03-25 19:47:48'),(100000092,23,'SIGNUP_STAR_POINT',0,100,'2015-03-25 20:02:12'),(100000093,24,'SIGNUP_STAR_POINT',0,100,'2015-03-25 20:10:40'),(100000094,25,'SIGNUP_STAR_POINT',0,100,'2015-03-25 20:20:14'),(100000095,26,'SIGNUP_STAR_POINT',0,100,'2015-03-27 13:47:44'),(100000096,27,'SIGNUP_STAR_POINT',0,100,'2015-03-27 14:08:50'),(100000097,28,'SIGNUP_STAR_POINT',0,100,'2015-05-06 17:46:46'),(100000098,29,'SIGNUP_STAR_POINT',0,100,'2015-05-08 16:50:22'),(100000099,30,'SIGNUP_STAR_POINT',0,100,'2015-05-08 17:01:01'),(100000100,31,'SIGNUP_STAR_POINT',0,100,'2015-05-08 17:27:14'),(100000101,32,'SIGNUP_STAR_POINT',0,100,'2015-05-11 11:45:15'),(100000102,33,'SIGNUP_STAR_POINT',0,100,'2015-05-20 16:22:10'),(100000113,34,'SIGNUP_STAR_POINT',0,100,'2015-07-13 18:51:20');

/* Function  structure for function  `fnAddProfile` */

/*!50003 DROP FUNCTION IF EXISTS `fnAddProfile` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnAddProfile`( accountID BIGINT, profileName VARCHAR(32), profileBirthday VARCHAR(10), profileGender CHAR(1), imgServerIdx tinyint, imgUrl VARCHAR(128), isHidden CHAR(1)) RETURNS bigint(20)
BEGIN
		DECLARE profileID BIGINT;
	
		INSERT INTO `profile_tb`(`ACCOUNT_ID`,`NAME`,`BIRTHDAY`,`GENDER`,`IMG_SERVER_IDX`,`IMG_URL`,`HIDDEN`,`DELETED`,`REG_DATETIME`)
		VALUES(accountID, profileName, profileBirthday, profileGender,imgServerIdx, imgUrl, isHidden, 'n', NOW());
		
		SET profileID = LAST_INSERT_ID();
		IF (profileID is null) THEN
			SET profileID = -1;			
		END IF;
		
		RETURN profileID;		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnAddStarPoint` */

/*!50003 DROP FUNCTION IF EXISTS `fnAddStarPoint` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnAddStarPoint`( accountID BIGINT,  infoTxt VARCHAR(32), modValue int ) RETURNS int(11)
BEGIN
		DECLARE res INT;
		DECLARE oldValue INT;
		DECLARE rowCnt INT;
		
		
		SELECT `STAR_POINT` INTO oldValue FROM `account_tb` WHERE `ACCOUNT_ID`=accountID LIMIT 1;
		IF (oldValue IS NULL) THEN
			SET res = -1;
		ELSE
			INSERT INTO `star_point_history_tb`(`ACCOUNT_ID`,`INFO`,`OLD_STAR_POINT`,`MOD`,`REG_DATETIME`)
			VALUES(accountID, infoTxt, oldValue, modValue, NOW());
			
			SET rowCnt = ROW_COUNT();
			IF (rowCnt is null) or (0 >= rowCnt) THEN
				SET res = -2;
			ELSE
				UPDATE `account_tb` SET `STAR_POINT` = oldValue + modValue WHERE `ACCOUNT_ID`=accountID;
				SET res = 1;
			END IF;
		END IF;		
		
		return res;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnDeleteOldAppAccessToken` */

/*!50003 DROP FUNCTION IF EXISTS `fnDeleteOldAppAccessToken` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnDeleteOldAppAccessToken`(appID BIGINT, accountID BIGINT) RETURNS varchar(64) CHARSET utf8
BEGIN
		
		DECLARE accessCount INT;
		DECLARE clientUID VARCHAR(64);
	
		
		SELECT COUNT(`ACCOUNT_ID`) INTO accessCount FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID LIMIT 1;
		IF (5 < accessCount) THEN
			SELECT `CLIENT_UID` INTO clientUID FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID ORDER BY `TOKEN_UPDATE` ASC LIMIT 1;
			
			DELETE FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID;
		ELSE
			SET clientUID = '';
		END IF;	
		
		
		RETURN clientUID;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnGetAccountDBErrorMessage` */

/*!50003 DROP FUNCTION IF EXISTS `fnGetAccountDBErrorMessage` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnGetAccountDBErrorMessage`(errorCode INT) RETURNS varchar(100) CHARSET utf8
BEGIN
		
		DECLARE errorMSG VARCHAR(100);	
		
		SELECT `MSG` INTO errorMSG FROM `error_code_info_tb` WHERE `CODE`=errorCode LIMIT 1;
		
		IF ( errorMSG IS NULL) OR (0>=LENGTH(errorMSG)) THEN
			SET errorMSG = CONCAT('unknown error, code:', errorCode);
		END IF;
		
		RETURN errorMSG;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnGetAppAccessCurrentProfileID` */

/*!50003 DROP FUNCTION IF EXISTS `fnGetAppAccessCurrentProfileID` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnGetAppAccessCurrentProfileID`(appID BIGINT, clientUID VARCHAR(64), accountID BIGINT) RETURNS bigint(20)
BEGIN
		
		DECLARE pfID bigint;		
		SELECT `PROFILE_ID` INTO pfID FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID LIMIT 1;
		IF (pfID is null) THEN
			SET pfID = -1;
		END IF;
		
		RETURN pfID;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnGetConstantNumber` */

/*!50003 DROP FUNCTION IF EXISTS `fnGetConstantNumber` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnGetConstantNumber`( keyName varchar(32) ) RETURNS int(11)
BEGIN
		DECLARE retv int;
		SELECT `VALUE` INTO retv FROM `constant_number_tb` WHERE `KEY`=keyName LIMIT 1;
		
		if ( retv is null) THEN
			SELECT `VALUE` INTO retv FROM `constant_number_tb` WHERE `KEY`='MIN_INT' LIMIT 1;
		END IF;
		
		return retv;
    END */$$
DELIMITER ;

/* Function  structure for function  `fnGetFirstProfileID` */

/*!50003 DROP FUNCTION IF EXISTS `fnGetFirstProfileID` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnGetFirstProfileID`(accountID bigint) RETURNS bigint(20)
BEGIN
		DECLARE profileID BIGINT;
		
		SELECT `PROFILE_ID` INTO profileID FROM `profile_tb` WHERE `ACCOUNT_ID`=accountID AND `HIDDEN`='n' AND `DELETED`='n' ORDER BY `PROFILE_ID` ASC LIMIT 1;
		if ( profileID is null) THEN
			SET profileID = 0;
		END IF;
		
		return profileID;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnGetKidswattsAppLoginCount` */

/*!50003 DROP FUNCTION IF EXISTS `fnGetKidswattsAppLoginCount` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnGetKidswattsAppLoginCount`(accountID BIGINT) RETURNS int(11)
BEGIN
    
		DECLARE cnt INT;
	
		SELECT `COUNT` INTO cnt FROM `kidswatts_login_count` WHERE `ACCOUNT_ID`=accountID LIMIT 1;
		IF (cnt is null) THEN
			SET cnt = 0;
		END IF;
		
		RETURN cnt;
    END */$$
DELIMITER ;

/* Function  structure for function  `fnGetNewAccessToken` */

/*!50003 DROP FUNCTION IF EXISTS `fnGetNewAccessToken` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnGetNewAccessToken`(accountID BIGINT) RETURNS varchar(40) CHARSET utf8
BEGIN	
		RETURN SHA1(CONCAT( CONCAT(accountID, UNIX_TIMESTAMP(NOW())), UUID() ));
    END */$$
DELIMITER ;

/* Function  structure for function  `fnInsertAccountAllowAccessAPP` */

/*!50003 DROP FUNCTION IF EXISTS `fnInsertAccountAllowAccessAPP` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnInsertAccountAllowAccessAPP`(appID BIGINT, accountID BIGINT) RETURNS int(11)
BEGIN
    
		DECLARE accessCount INT;
		SET accessCount = `fnIsAllowAppAccess`(appID, accountID);
		
		IF (accessCount IS NULL) OR (0 >= accessCount) THEN
			INSERT INTO `account_allow_access_app_tb`(`ACCOUNT_ID`,`APP_ID`,`REG_DATETIME`) VALUES(accountID, appID, NOW());
		END IF;
		
		SET accessCount = `fnIsAllowAppAccess`(appID, accountID);
		IF (accessCount IS NULL) THEN
			SET accessCount = 0;
		END IF;
		
		RETURN accessCount;
    END */$$
DELIMITER ;

/* Function  structure for function  `fnInsertAccountSignupInfo` */

/*!50003 DROP FUNCTION IF EXISTS `fnInsertAccountSignupInfo` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnInsertAccountSignupInfo`( appID BIGINT, clientUID VARCHAR(64), accountID BIGINT, signupPath VARCHAR(10) ) RETURNS int(11)
BEGIN
		DECLARE res INT;	
		DECLARE rowCnt INT;
		
		INSERT INTO `account_signup_info_tb`(`ACCOUNT_ID`,`SIGNUP_APP_ID`,`SIGNUP_UID`,`SIGNUP_PATH`,`CLIENT_UID`,`REG_DATETIME`)
		VALUES(accountID, appID, clientUID, signupPath, clientUID, NOW());
			
		SET rowCnt = ROW_COUNT();
		IF (rowCnt is null) or (0 >= rowCnt) THEN
			SET res = -1;
		ELSE
			SET res = 1;
		END IF;		
		
		return res;		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnIsAccountLogined` */

/*!50003 DROP FUNCTION IF EXISTS `fnIsAccountLogined` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnIsAccountLogined`(appID BIGINT, clientUID VARCHAR(64), accountID BIGINT, accessToken VARCHAR(64)) RETURNS int(11)
BEGIN
    
		DECLARE isLogined INT;
		
		SELECT COUNT(`ACCOUNT_ID`) INTO isLogined FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID AND `TOKEN`=accessToken LIMIT 1;
		IF (isLogined IS NULL) OR (0 >= isLogined ) THEN
			SET isLogined = 0;
		END IF;
		
		RETURN isLogined;
    END */$$
DELIMITER ;

/* Function  structure for function  `fnIsAllowAppAccess` */

/*!50003 DROP FUNCTION IF EXISTS `fnIsAllowAppAccess` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnIsAllowAppAccess`( appID bigint, accountID BIGINT) RETURNS int(11)
BEGIN
		DECLARE accessCount INT;	
		SELECT COUNT(`ACCOUNT_ID`) INTO accessCount FROM `account_allow_access_app_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID LIMIT 1;
		
		if (accessCount is null) or (0 >= accessCount) THEN
			SET accessCount = 0;
		END IF;
		
		-- return accessCount;
		 return 1;
    END */$$
DELIMITER ;

/* Function  structure for function  `fnIsConversionFromDLA` */

/*!50003 DROP FUNCTION IF EXISTS `fnIsConversionFromDLA` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnIsConversionFromDLA`(appID bigint, accountID bigint) RETURNS int(11)
BEGIN
    
		DECLARE cnt INT;
		DECLARE userID INT;
		
		SET userID = 0;
		SELECT `USER_ID` INTO userID FROM `conversion_from_dla` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID LIMIT 1;
		IF (userID IS NULL)  THEN
			SET userID = 0;
		END IF;
		
		return userID;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnIsDuplicateUserAccountEmail` */

/*!50003 DROP FUNCTION IF EXISTS `fnIsDuplicateUserAccountEmail` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnIsDuplicateUserAccountEmail`( accountEmail VARCHAR(128) ) RETURNS int(11)
BEGIN
		DECLARE cnt INT;
		SELECT COUNT(`ACCOUNT_ID`) INTO cnt FROM `account_tb` WHERE `EMAIL`=accountEmail LIMIT 1;
		
		RETURN cnt;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnUpdateAppAccessCurrentProfileID` */

/*!50003 DROP FUNCTION IF EXISTS `fnUpdateAppAccessCurrentProfileID` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnUpdateAppAccessCurrentProfileID`( appID BIGINT, clientUID VARCHAR(64), accountID BIGINT, profileID BIGINT) RETURNS bigint(20)
BEGIN
		
		DECLARE pfID bigint;		
		UPDATE `app_access_token_tb` SET `PROFILE_ID`=profileID WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID LIMIT 1;
		SELECT `PROFILE_ID` INTO pfID FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID LIMIT 1;
		IF (pfID is null) THEN
			SET pfID = -1;
		END IF;
		
		RETURN pfID;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnUpdateAppAccessToken` */

/*!50003 DROP FUNCTION IF EXISTS `fnUpdateAppAccessToken` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnUpdateAppAccessToken`(appID BIGINT, clientUID VARCHAR(64), accountID BIGINT) RETURNS varchar(40) CHARSET utf8
BEGIN
		DECLARE retvToken VARCHAR(40);
		DECLARE accessCount int;		
		DECLARE newToken VARCHAR(40);		
		
		SET newToken = fnGetNewAccessToken(accountID);
		
		SELECT COUNT(`ACCOUNT_ID`) INTO accessCount FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID LIMIT 1;
		
		if (accessCount is null) OR (0 = accessCount) THEN
			INSERT INTO `app_access_token_tb`(`ACCOUNT_ID`,`APP_ID`,`CLIENT_UID`,`PROFILE_ID`,`TOKEN`,`TOKEN_UPDATE`,`REG_DATETIME`)
			VALUES(accountID, appID, clientUID, 0, newToken, NOW(), NOW());
		ELSE
			UPDATE `app_access_token_tb` SET `TOKEN`=newToken, `TOKEN_UPDATE`=NOW() WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID LIMIT 1;
		END IF;
		
		SELECT `TOKEN` INTO retvToken FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID AND `CLIENT_UID`=clientUID LIMIT 1;
		
		RETURN retvToken;
		
    END */$$
DELIMITER ;

/* Function  structure for function  `fnUpdateUserAccountPassword` */

/*!50003 DROP FUNCTION IF EXISTS `fnUpdateUserAccountPassword` */;
DELIMITER $$

/*!50003 CREATE FUNCTION `fnUpdateUserAccountPassword`(accountID BIGINT, accountEMail VARCHAR(128), accountPWD VARCHAR(128)) RETURNS int(11)
BEGIN
		UPDATE `account_tb` SET `PWD`=accountPWD WHERE `ACCOUNT_ID`=accountID AND `EMAIL`=accountEMail AND `DELETED`='n' AND `SIGNUP_PATH`='slp';
		RETURN ROW_COUNT();
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spChangeUserAccountPassword` */

/*!50003 DROP PROCEDURE IF EXISTS  `spChangeUserAccountPassword` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spChangeUserAccountPassword`(appID BIGINT, clientIdentifier VARCHAR(64), clientID VARCHAR(15), accountEMail VARCHAR(128), accountPWD VARCHAR(128))
BEGIN
		DECLARE resCode INT;
		
		DECLARE accountID INT;
		DECLARE signupPath VARCHAR(32);
		DECLARE country VARCHAR(32);
	
		
		
		SET resCode = 0;
		
		SELECT `ACCOUNT_ID`, `SIGNUP_PATH`, `COUNTRY` INTO accountID, signupPath, country FROM `account_tb` WHERE `EMAIL`=accountEMail AND `DELETED`='n' LIMIT 1;
		IF (accountID is null) OR (0 >= accountID) OR (signupPath is null) THEN
			SET resCode = -200017;
		ELSE
			IF ( 'slp' != signupPath ) THEN
				SET resCode = -200018;
			ELSE
				UPDATE `account_tb` SET `PWD`=accountPWD WHERE `ACCOUNT_ID`=accountID AND `EMAIL`=accountEMail AND `DELETED`='n' AND `SIGNUP_PATH`='slp';
			END IF;
		END IF;
		
		IF (0 = resCode) THEN
			SELECT resCode AS `RES`, accountEMail AS `EMAIL`, country AS `COUNTRY`;
		ELSE
			SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spForgotUserAccountPasswordChange` */

/*!50003 DROP PROCEDURE IF EXISTS  `spForgotUserAccountPasswordChange` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spForgotUserAccountPasswordChange`(appID BIGINT, clientIdentifier VARCHAR(64), clientID VARCHAR(15), 
													accountEMail VARCHAR(128), accountPWD VARCHAR(128), chToken VARCHAR(40))
BEGIN
		DECLARE resCode INT;
		
		DECLARE accountID INT;
		DECLARE signupPath VARCHAR(32);
		DECLARE country VARCHAR(32);
		
		DECLARE timeOver INT;
		DECLARE timeOverInterval INT;
		DECLARE tmp INT;
		
		
		SET resCode = 0;
		
		SELECT `ACCOUNT_ID`, `SIGNUP_PATH`, `COUNTRY` INTO accountID, signupPath, country FROM `account_tb` WHERE `EMAIL`=accountEMail AND `DELETED`='n' LIMIT 1;
		IF (accountID IS NULL) OR (0 >= accountID) OR (signupPath IS NULL) THEN
			SET resCode = -200017;
		ELSE
			IF ( 'slp' != signupPath ) THEN
				SET resCode = -200018;
			END IF;
		END IF;
		IF (0 = resCode) THEN
			SET timeOverInterval = `fnGetConstantNumber`('FORGOT_PWD_LIMIT_TIME');
			SELECT COUNT(`ACCOUNT_ID`) INTO timeOver FROM `forgot_pwd_token_tb` 
			WHERE `ACCOUNT_ID`=accountID AND `TOKEN`=chToken AND `CHANGE`='n' AND DATE_ADD(`REG_DATETIME`, INTERVAL timeOverInterval MINUTE)<NOW()  LIMIT 1;
			IF (timeOver IS NOT NULL) AND (0 < timeOver) THEN
				SET resCode = -200023;
			END IF;
		END IF;
		
		IF (0 = resCode) THEN
			SET tmp = fnUpdateUserAccountPassword(accountID, accountEMail, accountPWD);
			UPDATE `forgot_pwd_token_tb` SET `CHANGE`='y', `CHANGE_DATETIME`=NOW() WHERE `ACCOUNT_ID`=accountID AND `TOKEN`=chToken;
		END IF;		
		
		IF (0 = resCode) THEN
			SELECT resCode AS `RES`, accountEMail AS `EMAIL`, country AS `COUNTRY`;
		ELSE
			SELECT resCode AS `RES`, `fnGetAccountDBErrorMessage`(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spForgotUserAccountPasswordToken` */

/*!50003 DROP PROCEDURE IF EXISTS  `spForgotUserAccountPasswordToken` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spForgotUserAccountPasswordToken`(appID BIGINT, clientUID VARCHAR(64), clientIP VARCHAR(15), accountEMail VARCHAR(128))
BEGIN
		DECLARE resCode INT;
		
		DECLARE accountID INT;
		DECLARE signupPath VARCHAR(32);
		DECLARE country VARCHAR(32);
		DECLARE token VARCHAR(40);
	
		
		
		SET resCode = 0;
		
		SELECT `ACCOUNT_ID`, `SIGNUP_PATH`, `COUNTRY` INTO accountID, signupPath, country FROM `account_tb` WHERE `EMAIL`=accountEMail AND `DELETED`='n' LIMIT 1;
		IF (accountID IS NULL) OR (0 >= accountID) OR (signupPath IS NULL) THEN
			SET resCode = -200017;
		ELSE
			IF ( 'slp' != signupPath ) THEN
				SET resCode = -200018;
			ELSE
				UPDATE `forgot_pwd_token_tb` SET `CHANGE`='d', `CHANGE_DATETIME`=NOW() WHERE `ACCOUNT_ID`=accountID AND `CHANGE`='n';
				
				SET token = `fnGetNewAccessToken`(accountID);				
				INSERT INTO `forgot_pwd_token_tb`(`ACCOUNT_ID`,`TOKEN`,`CLIENT_IP`,`REG_DATETIME`,`CHANGE`,`CHANGE_DATETIME`) 
				VALUES(accountID,token,clientIP,NOW(),'n','0000-00-00 00:00:00');
			END IF;
		END IF;
		
		IF (0 = resCode) THEN
			SELECT resCode AS `RES`, accountEMail AS `EMAIL` , accountID AS `ACCOUNT_ID`, token AS `TOKEN`, country AS `COUNTYR`;
		ELSE
			SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spGetUserAccountSignupPath` */

/*!50003 DROP PROCEDURE IF EXISTS  `spGetUserAccountSignupPath` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spGetUserAccountSignupPath`(appID BIGINT, clientUID VARCHAR(64), accountEmail VARCHAR(255) )
BEGIN
		DECLARE resCode INT;
		DECLARE errorCode INT;
		DECLARE errorMsg VARCHAR(128);
		DECLARE signuppath VARCHAR(20);
		
		
		SET resCode = 0;
		SET errorCode = 0;
		SET errorMsg = "";
		
		SELECT `SIGNUP_PATH` INTO signuppath FROM `account_tb` WHERE `EMAIL`=accountEmail LIMIT 1;
		
		IF (signuppath is null) THEN
			SET signuppath = '';
		END IF;
		
		SELECT resCode AS `RES`, signuppath AS `SIGNUP_PATH`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spGetUserAccountWithProfileInfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `spGetUserAccountWithProfileInfo` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spGetUserAccountWithProfileInfo`( appID BIGINT, clientUID VARCHAR(64), clientIP VARCHAR(15),
																			accountID BIGINT, accessToken VARCHAR(64) )
BEGIN
		DECLARE resCode INT;
		DECLARE errorCode INT;
		DECLARE errorMsg VARCHAR(128);
		DECLARE isInsertAccessApp INT;
		DECLARE lang VARCHAR(2);
		DECLARE profileID BIGINT;
		DECLARE delClientUID VARCHAR(64);
		DECLARE starPoint INT;
		DECLARE accountEmail VARCHAR(128);
		DECLARE accessToken VARCHAR(64);
		
		
		SET resCode = 0;
		SET errorCode = 0;
		SET errorMsg = "";
		
		IF (0 = resCode) THEN
			SET isInsertAccessApp = `fnIsAllowAppAccess`(accountID, appID);
			IF (isInsertAccessApp is null) OR (0 >= isInsertAccessApp) THEN
				SET resCode = 0;
				SET errorCode = 0;
			END IF;
		END IF;
		
		IF (0 = resCode) THEN	
			SET profileID = `fnGetAppAccessCurrentProfileID`(appID, accountID, clientUID);
			IF ( 0 >= profileID ) THEN
				SET profileID = `fnGetFirstProfileID`(accountID);
				SET profileID = `fnUpdateAppAccessCurrentProfileID`(appID, accountID, clientUID, profileID);
			END IF;
			
			SELECT `EMAIL`, `COUNTRY`, `STAR_POINT` INTO accountEmail, lang, starPoint FROM `account_tb` WHERE `ACCOUNT_ID`=accountID LIMIT 1;
			SELECT `TOKEN` INTO accessToken FROM `app_access_token_tb` WHERE `ACCOUNT_ID`=accountID AND `APP_ID`=appID  AND `CLIENT_UID`=clientUID LIMIT 1;
			
			SET delClientUID = `fnDeleteOldAppAccessToken`(appID, accountID);		
			
			SELECT resCode AS `RES`
				, lang AS `COUNTRY`
				, starPoint AS `STAR_POINT`				
				, accountEmail AS `EMAIL`
				, accessToken AS `ACCESS_TOKEN`
				, pf.`ACCOUNT_ID`
				, pf.`PROFILE_ID`
				, pf.`NAME`
				, DATE_FORMAT(pf.`BIRTHDAY`, "%Y-%m-%d") AS `BIRTHDAY`
				, pf.`GENDER`
				, pf.`IMG_SERVER_IDX`
				, pf.`IMG_URL`
				, pf.`HIDDEN`
				, profileID AS CUR_PROFILE_ID
				, delClientUID AS DEL_CLIENT_UID
			FROM `profile_tb` AS pf WHERE pf.`ACCOUNT_ID`=accountID AND `pf`.`DELETED`='n';
			
		ELSE 
			SET errorMsg = `fnGetAccountDBErrorMessage`(resCode);	
			SELECT resCode AS `RES`, errorCode AS `ERR_CODE`, errorMsg AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spIsAllowAPP` */

/*!50003 DROP PROCEDURE IF EXISTS  `spIsAllowAPP` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spIsAllowAPP`(appID BIGINT, clientUID VARCHAR(64), clienIP VARCHAR(15), accountID BIGINT, accessToken VARCHAR(40) )
BEGIN
		DECLARE resCode INT;
		DECLARE isAllowAPP INT;
		
		
		SET resCode = 0;
		
		SET isAllowAPP = fnIsAllowAppAccess(appID, accountID);
		IF (isAllowAPP is null) or (0 >= isAllowAPP ) THEN
			SET isAllowAPP = 0;
		END IF;
		
		SELECT resCode AS `RES`, isAllowAPP AS `IS_ALLOW_APP`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spIsLoginUserAccount` */

/*!50003 DROP PROCEDURE IF EXISTS  `spIsLoginUserAccount` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spIsLoginUserAccount`(appID BIGINT, clientUID VARCHAR(64), accountID BIGINT, accessToken VARCHAR(40))
BEGIN
		DECLARE resCode INT;
		DECLARE isLogIn INT;		
		DECLARE isKidswattsLoginCount INT;
		
		SET resCode = 0;	
		
		SET isKidswattsLoginCount = 0;
		SET isKidswattsLoginCount = 0;	
		
		SET isLogIn = `fnIsAccountLogined`(appID, clientUID, accountID, accessToken);		
		IF (isLogIn IS NULL) OR (0 >= isLogIn ) THEN
			SET isLogIn = 0;
		END IF;
		
		IF (1 = isLogIn ) THEN
			SET isKidswattsLoginCount = `fnGetKidswattsAppLoginCount`(accountID);
			IF (isKidswattsLoginCount IS NULL) OR (0 >= isKidswattsLoginCount ) THEN
				SET isKidswattsLoginCount = 0;
			END IF;
		END IF;
		
		SELECT resCode AS `RES`, isLogIn AS `IS_LOGIN`, isKidswattsLoginCount AS `IS_KIDSWATTS_APP_LOGIN`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spIsLoginUserAccountWithProfileID` */

/*!50003 DROP PROCEDURE IF EXISTS  `spIsLoginUserAccountWithProfileID` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spIsLoginUserAccountWithProfileID`(appID BIGINT, clientUID VARCHAR(64), accountID BIGINT, accessToken VARCHAR(40), profileID BIGINT)
BEGIN
		DECLARE resCode INT;
		DECLARE isLogIn INT;		
		DECLARE isKidswattsLoginCount INT;
		DECLARE tmpProfileID BIGINT;
		
		SET resCode = 0;	
		
		SET isKidswattsLoginCount = 0;
		SET isKidswattsLoginCount = 0;	
		
		SET isLogIn = `fnIsAccountLogined`(appID, clientUID, accountID, accessToken);		
		IF (isLogIn IS NULL) OR (0 >= isLogIn ) THEN
			SET isLogIn = 0;
		END IF;
		
		IF (1 = isLogIn ) THEN
			SELECT `PROFILE_ID` INTO tmpProfileID FROM `profile_tb` WHERE `ACCOUNT_ID`=accountID AND `PROFILE_ID`=profileID AND `DELETED`='n' LIMIT 1;
			IF (tmpProfileID is null) OR (profileID != tmpProfileID) THEN
				SET isLogIn = 0;
				SET tmpProfileID = 0;
			END IF;
		END IF;
		
		IF (1 = isLogIn ) THEN
			SET isKidswattsLoginCount = `fnGetKidswattsAppLoginCount`(accountID);
			IF (isKidswattsLoginCount IS NULL) OR (0 >= isKidswattsLoginCount ) THEN
				SET isKidswattsLoginCount = 0;
			END IF;
		END IF;
		
		
		
		SELECT resCode AS `RES`, isLogIn AS `IS_LOGIN`, isKidswattsLoginCount AS `IS_KIDSWATTS_APP_LOGIN`, tmpProfileID AS `PROFILE_ID`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spProfileAdd` */

/*!50003 DROP PROCEDURE IF EXISTS  `spProfileAdd` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spProfileAdd`(appID BIGINT, clientUID VARCHAR(64), 
															accountID BIGINT, accessToken VARCHAR(40),
															profileName VARCHAR(20),  profileBirthday VARCHAR(10), profileGender CHAR(1) )
BEGIN
		DECLARE resCode INT;
		DECLARE profileID INT;
		DECLARE profileCount INT;
		DECLARE maxProfileCount INT;
		DECLARE accountCount INT;
		
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN
			ROLLBACK;
			-- mysql 5.5.*
			
			SET resCode = -1; 
			SELECT resCode AS `RES`,  'SQLEXCEPTION, `slp_account_db`.`spCreateUserAccount` ' AS `msg`;
			SHOW ERRORS;
			
			-- mysql 5.6 이상
			-- GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			-- SELECT resCode AS `RES`, errorCode AS `CODE`, CONCAT(CONCAT(CONCAT(CONCAT(CONCAT('SQLEXCEPTION, spCreateUser sqlstate:', @sqlstate), ', errno:'), @errno), ', '), @text)  AS `msg`;
		END;
		
		
		SET resCode = 0;
		
		SELECT COUNT(`ACCOUNT_ID`) INTO accountCount FROM `account_tb` WHERE `ACCOUNT_ID`=accountID AND `DELETED`='n' LIMIT 1;
		IF (accountCount IS NULL) or (0 >= accountCount) THEN
			SET resCode = -200016;
		END IF;
		
		IF (0 = resCode ) THEN
			SET maxProfileCount = `fnGetConstantNumber`('MAX_PROFILE');
			
			SELECT COUNT(`PROFILE_ID`) INTO profileCount FROM `profile_tb` WHERE `ACCOUNT_ID`=accountID AND `DELETED`='n' AND `HIDDEN`='n';		
			IF (maxProfileCount <= profileCount) THEN
				SET resCode = -200015;
			END IF;
		END IF;
		
		START TRANSACTION;
		
		IF (0 = resCode ) THEN
			SET profileID = fnAddProfile( accountID, profileName, profileBirthday, profileGender, 0, '', 'n');
			IF (profileID is null) or (0 >= profileID) THEN
				SET resCode = -200005;
			END IF;
		END IF;	
		
		IF (0 = resCode) THEN
			COMMIT;
			SELECT resCode AS `RES`, resCode AS `CODE`, '' AS `MSG` 
			, pf.`PROFILE_ID`
			, pf.`NAME`
			, DATE_FORMAT(pf.`BIRTHDAY`, '%Y-%m-%d') AS `BIRTHDAY`
			, pf.`GENDER`
			, pf.`IMG_SERVER_IDX`
			, pf.`IMG_URL`
			, pf.`HIDDEN`
			FROM `profile_tb` AS pf WHERE pf.`ACCOUNT_ID`=accountID AND pf.`PROFILE_ID`=profileID AND `DELETED`='n';
		ELSE
			ROLLBACK;
			SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spProfileDelete` */

/*!50003 DROP PROCEDURE IF EXISTS  `spProfileDelete` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spProfileDelete`(appID BIGINT, clientUID VARCHAR(64), clientIP varchar(15),
									accountID BIGINT, accessToken VARCHAR(40), profileID BIGINT )
BEGIN
		DECLARE resCode INT;
		
		DECLARE curProfileCount INT;
		DECLARE targetProfileID INT;
		DECLARE firstProfileID INT;
		
		
		
		SET resCode = 0;
		
		SELECT COUNT(`PROFILE_ID`) INTO curProfileCount FROM `profile_tb` WHERE `ACCOUNT_ID`=accountID AND `DELETED`='n' AND `HIDDEN`='n' LIMIT 1;
		IF (curProfileCount IS NULL) or (0 >= curProfileCount) THEN
			SET resCode = -200016;
		END IF;
		
		IF (curProfileCount IS NOT NULL) AND (1 = curProfileCount) THEN
			SET resCode = -200019;
		END IF;
		
		
		
		
		IF (0 = resCode ) THEN
			SELECT `PROFILE_ID` INTO targetProfileID FROM `profile_tb` WHERE `ACCOUNT_ID`=accountID AND `PROFILE_ID`=profileID AND `DELETED`='n' AND `HIDDEN`='n' LIMIT 1;		
			IF (targetProfileID is NULL) OR (0 >= targetProfileID) OR (targetProfileID != profileID ) THEN
				SET resCode = -200013;
			END IF;
		END IF;
		
		IF (0 = resCode ) THEN
			SET firstProfileID = fnGetFirstProfileID(accountID);
			
			UPDATE `profile_tb` SET `DELETED`='y' WHERE `ACCOUNT_ID`=accountID AND `PROFILE_ID`=profileID AND `DELETED`='n' AND `HIDDEN`='n' LIMIT 1;
			UPDATE `app_access_token_tb` SET `PROFILE_ID`=firstProfileID WHERE `ACCOUNT_ID`=accountID AND `PROFILE_ID`=profileID;
		END IF;	
		
		IF (0 = resCode) THEN
			SELECT resCode AS `RES`, profileID AS `PROFILE_ID`;			
		ELSE
			SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spUserAccountAllowApp` */

/*!50003 DROP PROCEDURE IF EXISTS  `spUserAccountAllowApp` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spUserAccountAllowApp`(appID BIGINT, clientUID VARCHAR(64), accountID bigint, accessToken VARCHAR(40), clientIP VARCHAR(15))
BEGIN
		DECLARE resCode INT;
		DECLARE isAllowApp BIGINT;
		DECLARE appAccessToken varchar(40);
		DECLARE profileID BIGINT;
		
		SET resCode = 0;
		
		SET isAllowApp = `fnInsertAccountAllowAccessAPP`(appID, accountID); -- 접근 허용 앱에 추가.
		IF (isAllowApp is null) OR (0 >= isAllowApp) THEN 
			SET resCode = -200008;
		END IF;
		
		IF (0 = resCode) THEN -- profile id 찾기
			SET profileID = `fnGetFirstProfileID`(accountID);
			IF (profileID IS NULL) OR (0 >= profileID) THEN
				SET resCode = -200013;
			END IF;
		END IF;
		
		IF (0 = resCode) THEN 
			-- SET appAccessToken = `fnUpdateAppAccessToken`(accountID, appID, clientIdentifier); -- app access token 업데이트
			SET profileID = `fnGetAppAccessCurrentProfileID`(appID, clientUID, accountID); -- 현재 사용중인 PROFILE_ID 확인
			IF (profileID is null) or (0 >= profileID) THEN
				SET profileID = `fnUpdateAppAccessCurrentProfileID`(appID, clientUID, accountID, profileID); -- 현재 사용중인 PROFILE_ID 업데이트
				IF (profileID IS NULL) OR (0 >= profileID) THEN
					SET resCode = -200014;
				END IF;
			END IF;
		END IF;
		
		IF (0 = resCode) THEN			
			SELECT resCode AS `RES`, profileID AS `PROFILE_ID`, accessToken AS `ACCESS_TOKEN`;
		ELSE
			SELECT resCode AS `RES`, `fnGetAccountDBErrorMessage`(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spUserAccountCreate` */

/*!50003 DROP PROCEDURE IF EXISTS  `spUserAccountCreate` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spUserAccountCreate`(	appID BIGINT, clientUID VARCHAR(64), clientIP VARCHAR(15),
																	accountEmail VARCHAR(255), accountPWD VARCHAR(128),
																	accountCountry VARCHAR(2), signUpPath VARCHAR(20), 
																	profileName VARCHAR(20), profileBirthday VARCHAR(10), profileGender CHAR(1) )
BEGIN
		DECLARE resCode INT;
		DECLARE signupStarPoint INT;
		DECLARE isDuplicateEmail INT;
		DECLARE accountID INT;
		DECLARE isSuccessAddStarPoint INT;
		DECLARE profileID INT;
		DECLARE hiddenProfileID INT;
		DECLARE isInsertSignupInfo INT;
		DECLARE isInsertAllowAppAccess INT;
		DECLARE appAccessToken VARCHAR(40);
		
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN
			ROLLBACK;
			-- mysql 5.5.*
			SET resCode = -1; 			
			SELECT resCode AS `RES`,  'SQLEXCEPTION, `slp_account_db`.`spCreateUserAccount` ' AS `msg`;
			SHOW ERRORS;
			
			
			-- mysql 5.6 이상
			--  GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			--  SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`, CONCAT(CONCAT(CONCAT(CONCAT(CONCAT('SQLEXCEPTION, spCreateUser sqlstate:', @sqlstate), ', errno:'), @errno), ', '), @text)  AS `msg`;
		END;
		
		
		SET resCode = 0;
		
		SET isDuplicateEmail = `fnIsDuplicateUserAccountEmail`(accountEmail);
		
		IF (0 < isDuplicateEmail) THEN
			SET resCode = -200001;
		END IF;
		
		
		START TRANSACTION;
		
		IF (0 = resCode) THEN
			INSERT INTO `account_tb`(`EMAIL`,`PWD`,`STAR_POINT`,`COUNTRY`,`SIGNUP_PATH`, `APP_ID`, `BLOCK`,`DELETED`,`REG_DATETIME`) 
			VALUES (accountEmail, accountPWD, 0, accountCountry, signUpPath, appID, 'n','n', NOW());			
			SET accountID = LAST_INSERT_ID();
			
			IF (accountID IS NULL) OR (0 >= accountID) THEN
				SET resCode = -200002;
			END IF;
		END IF;
		
		
		IF (0 = resCode) THEN
			SET isInsertSignupInfo = `fnInsertAccountSignupInfo`( appID, clientUID, accountID, signupPath);
			IF (isInsertSignupInfo IS NULL) OR (1 != isInsertSignupInfo) THEN
				SET resCode = -200007;
			END IF;
		END IF;
		
		
		IF (0 = resCode) THEN
			SET signupStarPoint = `fnGetConstantNumber`('SIGNUP_STAR_POINT');
			SET isSuccessAddStarPoint = `fnAddStarPoint`(accountID, 'SIGNUP_STAR_POINT', signupStarPoint);
			IF (isSuccessAddStarPoint IS NULL) OR (1 != isSuccessAddStarPoint) THEN
				IF (-1 = isSuccessAddStarPoint) THEN
					SET resCode = -200003;
				ELSE
					SET resCode = -200004;					
				END IF;
			END IF;
		END IF;
		
		IF (0 = resCode ) THEN
			SET hiddenProfileID = `fnAddProfile`( accountID, CONCAT('hidden_',accountID) , '2015-01-01', 'm', 0, '', 'y');
			IF (hiddenProfileID IS NULL) OR (0 >= hiddenProfileID) THEN
				SET resCode = -200006;
			END IF;
		END IF;
		
		IF (0 = resCode ) THEN
			SET profileID = `fnAddProfile`( accountID, profileName, profileBirthday, profileGender, 0, '', 'n');
			IF (profileID IS NULL) OR (0 >= profileID) THEN
				SET resCode = -200005;
			END IF;
		END IF;	
		
		IF (0 = resCode ) THEN
			SET isInsertAllowAppAccess = `fnInsertAccountAllowAccessAPP`(accountID, `fnGetConstantNumber`('KW_APP_ID'));
			if (isInsertAllowAppAccess is null) or (0 >= isInsertAllowAppAccess) THEN
				SET resCode = -200008;
			END IF;
		END IF;
		
		IF (0 = resCode ) THEN
			SET appAccessToken = `fnUpdateAppAccessToken`(appID, clientUID, accountID);
			IF (appAccessToken IS NULL) OR (0 >= LENGTH(appAccessToken) ) THEN
				SET resCode = -2000009;
			END IF;
		END IF;
		
		-- IF (0 = resCode ) THEN
		-- 	SET profileID = `fnUpdateAppAccessCurrentProfileID`(accountID, appID, clientUID, profileID);
		-- END IF;
		
		IF (0 = resCode) THEN
			COMMIT;
			SELECT resCode AS `RES`, accountID AS `ACCOUNT_ID`, appAccessToken AS `ACCESS_TOKEN`;
		ELSE
			ROLLBACK;
			SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `spUserAccountLogin` */

/*!50003 DROP PROCEDURE IF EXISTS  `spUserAccountLogin` */;

DELIMITER $$

/*!50003 CREATE PROCEDURE `spUserAccountLogin`(	appID BIGINT, clientUID VARCHAR(64), clientIP VARCHAR(15),
																	accountEmail VARCHAR(255), accountPWD VARCHAR(128), signUpPath VARCHAR(20) )
BEGIN
		DECLARE resCode INT;
		DECLARE accountID BIGINT;
		DECLARE isAllowAPP INT;
		DECLARE appAccessToken VARCHAR(40);
		DECLARE lang VARCHAR(2);
		DECLARE profileID BIGINT;
		DECLARE delClientUID VARCHAR(64);
		DECLARE starPoint int;
		
		
		
		SET resCode = 0;		
		SET accountID = 0;
		
		SELECT `ACCOUNT_ID` INTO accountID FROM `account_tb` WHERE `EMAIL`=accountEmail AND `DELETED`='n' LIMIT 1;
		IF ( accountID IS NULL) OR (0 >= accountID) THEN
			SET resCode = -200010;
		ELSE 
			SET accountID = 0;
			SELECT `ACCOUNT_ID` INTO accountID FROM `account_tb` WHERE `EMAIL`=accountEmail AND `PWD`=accountPWD AND `DELETED`='n' LIMIT 1;
			IF ( accountID IS NULL) OR (0 >= accountID) THEN
				SET accountID = 0;
				SELECT `ACCOUNT_ID` INTO accountID FROM `account_tb` WHERE `EMAIL`=accountEmail AND `SIGNUP_PATH`=signUpPath AND `DELETED`='n' LIMIT 1;
				IF ( accountID IS NULL) OR (0 >= accountID) THEN
					SET resCode = -200011;
				ELSE
					SET resCode = -200010;
				END IF;
			END IF;
		END IF;
		
		IF (0 = resCode) THEN
			SET isAllowAPP = `fnIsAllowAppAccess`(appID, accountID);
			SET appAccessToken = `fnUpdateAppAccessToken`(appID, clientUID, accountID);
		END IF;
		
		
		IF (0 = resCode) THEN	
			SET profileID = `fnGetAppAccessCurrentProfileID`(appID, clientUID, accountID);
			IF ( 0 >= profileID ) THEN
				SET profileID = `fnGetFirstProfileID`(accountID);
				SET profileID = `fnUpdateAppAccessCurrentProfileID`(appID, clientUID, accountID, profileID);
			END IF;
			
			SELECT `COUNTRY`, `STAR_POINT` INTO lang, starPoint FROM `account_tb` WHERE `ACCOUNT_ID`=accountID;			
			
			SET delClientUID = fnDeleteOldAppAccessToken(appID, accountID);
			
			
			SELECT resCode AS `RES`
				, lang AS `COUNTRY`
				, starPoint AS `STAR_POINT`
				, isAllowAPP AS `IS_ALLOW_APP`
				, appAccessToken AS `ACCESS_TOKEN`
				, accountID AS `ACCOUNT_ID`;
			
		ELSE 
			SELECT resCode AS `RES`, fnGetAccountDBErrorMessage(resCode) AS `MSG`;
		END IF;
		
    END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
